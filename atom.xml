<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jason&#39;s Blog</title>
  
  <subtitle>佳宸学习和分享笔记的地方</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-05T13:20:53.663Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>吴佳宸</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深信服研发前端岗位实习面经</title>
    <link href="http://yoursite.com/2019/11/05/%E6%B7%B1%E4%BF%A1%E6%9C%8D%E7%A0%94%E5%8F%91%E5%89%8D%E7%AB%AF%E5%B2%97%E4%BD%8D%E5%AE%9E%E4%B9%A0%E9%9D%A2%E7%BB%8F/"/>
    <id>http://yoursite.com/2019/11/05/深信服研发前端岗位实习面经/</id>
    <published>2019-11-05T13:11:20.771Z</published>
    <updated>2019-11-05T13:20:53.663Z</updated>
    
    <content type="html"><![CDATA[<h1 id="深信服研发前端岗位实习面经"><a href="#深信服研发前端岗位实习面经" class="headerlink" title="深信服研发前端岗位实习面经"></a>深信服研发前端岗位实习面经</h1><h3 id="前两轮两轮技术面"><a href="#前两轮两轮技术面" class="headerlink" title="前两轮两轮技术面"></a>前两轮两轮技术面</h3><p>前端也学了有一年了，感觉学得差不多了，就去招聘网站看看岗位要求，</p><blockquote><p>长沙知名互联网公司基本没有😭 昨天逛实习僧，看到长沙有深信服的前端岗位又是招21届的又是vue技术栈 想试试水，投一个。</p></blockquote><a id="more"></a><p>中间没有录音，凭记忆就这些了，下次一定要准备好复盘</p><h4 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h4><p><strong>说说项目的亮点，难点</strong>，两次面试都说到了项目，第一次说了购物车模块实现，路由keep-alive生命周期什么的，第二次说的使用async await去失效的图片</p><h4 id="css"><a href="#css" class="headerlink" title="css"></a>css</h4><ul><li>position relative absolute float</li><li>css的定位</li></ul><h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><ul><li>怎么判断数组数据类型tinstanceof、Object.prototype.toString.call()等</li><li>原生ajax讲代码，请求过程 </li><li>怎么原生实现同步ajax</li><li>setTimeout 执行顺序</li><li>异步同步，事件机制</li><li>宏任务与微任务</li><li>说一下get post区别</li><li>dom事件流 冒泡 捕获</li><li>事件代理</li><li>call apply区别</li><li>“==”和“===”的区别</li><li>for of 和for in区别</li></ul><h4 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h4><ul><li>讲讲es6学了什么，</li><li>我说了let const 变量提升</li><li>promise async await</li><li>他叫 我说一下 set 和map</li></ul><h3 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h3><ul><li>vue生命周期</li><li>vue router</li><li>组件怎么传参数 父子props emit 同组件 bus</li><li>vuex</li><li>说一下vue与react的区别</li></ul><h4 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h4><ul><li>说一下Webpack基本概念与配置</li><li>loader与plugin原理与实现 ，这个不太了解，我说一般使用vue-cli自动打包plugin按需加载</li></ul><h3 id="hr面试"><a href="#hr面试" class="headerlink" title="hr面试"></a>hr面试</h3><ul><li>自我介绍</li><li>说一说你平时怎么学习，</li><li>公司项目跟自己写项目区别，</li><li>说一说你看过什么书 ，</li><li>说一说你遇到的最大的困难，</li><li>还有什么问的吗，问他新人培训机制 是怎样的</li></ul><hr><p><strong>没想到一次试水面试，三轮面试就这样过了，上午面试第一个电话还在健身房洗澡，没接，打过去裤子都没穿，边穿衣服边面试，面完没想到说我还行😇</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;深信服研发前端岗位实习面经&quot;&gt;&lt;a href=&quot;#深信服研发前端岗位实习面经&quot; class=&quot;headerlink&quot; title=&quot;深信服研发前端岗位实习面经&quot;&gt;&lt;/a&gt;深信服研发前端岗位实习面经&lt;/h1&gt;&lt;h3 id=&quot;前两轮两轮技术面&quot;&gt;&lt;a href=&quot;#前两轮两轮技术面&quot; class=&quot;headerlink&quot; title=&quot;前两轮两轮技术面&quot;&gt;&lt;/a&gt;前两轮两轮技术面&lt;/h3&gt;&lt;p&gt;前端也学了有一年了，感觉学得差不多了，就去招聘网站看看岗位要求，&lt;/p&gt;&lt;blockquote&gt;
&lt;p&gt;长沙知名互联网公司基本没有😭 昨天逛实习僧，看到长沙有深信服的前端岗位又是招21届的又是vue技术栈 想试试水，投一个。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="实习" scheme="http://yoursite.com/categories/%E5%AE%9E%E4%B9%A0/"/>
    
    
      <category term="实习" scheme="http://yoursite.com/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>服务器部署node新手教程（二）</title>
    <link href="http://yoursite.com/2019/10/31/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2node%E6%95%99%E7%A8%8B%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2019/10/31/服务器部署node教程（二）/</id>
    <published>2019-10-31T11:09:48.742Z</published>
    <updated>2019-10-31T12:08:41.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服务器部署node教程（二）"><a href="#服务器部署node教程（二）" class="headerlink" title="服务器部署node教程（二）"></a>服务器部署node教程（二）</h1><blockquote><p> 期间经历了很多坑，多数还是找到了解决办法，相信经历了第一次，以后就能孰能生巧了。</p></blockquote><h3 id="安装最新的node-js环境"><a href="#安装最新的node-js环境" class="headerlink" title="安装最新的node.js环境"></a>安装最新的node.js环境</h3><a id="more"></a><p><code>ssh 用户名</code></p><p><code>yum update -y</code>更新</p><p><code>yum install -y nodejs</code>安装nodejs</p><p>查看结果无误，不过版本太低低 删掉 rm</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572102034266.png" alt="1572102034266"></p><p><strong>去官网下</strong></p><p><code>https://nodejs.org/dist/</code></p><p>我下载的最新13版本</p><p><code>wget https://nodejs.org/dist/v13.0.1//node-v13.0.1-linux-x64.tar.xz</code></p><p>解压</p><p><code>tar -xvJf node-v13.0.1-linux-x64.tar.xz</code></p><p>利用软链接放到环境变量 必须用绝对路径 ，路径自己ls查看</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572105757441.png" alt="1572105757441"></p><p>成功🤞</p><h3 id="通过VsCode-ftp-连接接服务器"><a href="#通过VsCode-ftp-连接接服务器" class="headerlink" title="通过VsCode ftp 连接接服务器"></a>通过VsCode ftp 连接接服务器</h3><p>vscode安装插件<code>sftp</code></p><p><code>ctrl+shift+p</code>搜索<code>sftp:Config</code></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572106834768.png" alt="1572106834768"></p><p>配置config，用法字面意思能看懂，更复杂配置搜文档</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Jason"</span>,</span><br><span class="line">    <span class="attr">"host"</span>: <span class="string">"47.103.209.82"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"sftp"</span>,</span><br><span class="line">    <span class="attr">"port"</span>: <span class="number">22</span>,</span><br><span class="line">    <span class="attr">"username"</span>: <span class="string">"root"</span>,</span><br><span class="line">    <span class="attr">"remotePath"</span>: <span class="string">"/home/frontend"</span>,</span><br><span class="line">    <span class="attr">"uploadOnSave"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"ignore"</span>: [</span><br><span class="line">        <span class="string">".vscode"</span>,</span><br><span class="line">        <span class="string">".git"</span>,</span><br><span class="line">        <span class="string">".DS_Store"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"syncOption"</span>: &#123;</span><br><span class="line">        <span class="attr">"delete"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"update"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"watcher"</span>: &#123;</span><br><span class="line">        <span class="attr">"files"</span>: <span class="string">"**/*"</span>,</span><br><span class="line">        <span class="attr">"autoUpload"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"autoDelete"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"privateKeyPath"</span>: <span class="string">"~/.ssh/id_rsa"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572145404172.png" alt="1572145404172"></p><p>右键可以拉取推送到服务器</p><h3 id="配置nginx-反向代理"><a href="#配置nginx-反向代理" class="headerlink" title="配置nginx 反向代理"></a>配置nginx 反向代理</h3><p>安装<code>yum install -y nginx</code></p><p>配置nginx.conf，监听服务器本地的5000端口，详细配置请看nginx文档</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># For more information on configuration, see:</span><br><span class="line">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class="line">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"># Load dynamic modules. See /usr/share/nginx/README.dynamic.</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://127.0.0.1:3000;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>推入服务器，修改为可执行权限</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572154533239.png" alt="1572154533239"></p><p>覆盖掉原来的nginx配置文件</p><p><code># cp nginx.conf /etc/nginx/nginx.conf</code></p><p>重启nginx</p><p><code># systemctl restart nginx</code></p><p>浏览器输入ip，返回nginx error说明已经配上了</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572154823450.png" alt="1572154823450"></p><p>在服务器安装个express</p><p><code>npm install express -S</code></p><p>测试一下</p><p>趴到本地，建一个index.js测试文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理静态文件</span></span><br><span class="line">app.use(express.static(<span class="string">'client/dist'</span>));</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    res.sendFile(path.resolve(__dirname, <span class="string">'client'</span>, <span class="string">'dist'</span>, <span class="string">'index.html'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/api/datas'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        name: <span class="string">'Jason'</span>,</span><br><span class="line">        wechat: <span class="string">'wjcyx99'</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line">app.listen(port, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Server running on port <span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>推到服务器，运行 <code>node index.js</code><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572156101543.png" alt="1572156101543"></p><p>浏览器查看结果，成功👍</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572156042839.png" alt="1572156042839"></p><h3 id="创建全局模块软链接"><a href="#创建全局模块软链接" class="headerlink" title="创建全局模块软链接"></a>创建全局模块软链接</h3><p>刚刚 <code>cnpm  install -g @vue/cli</code>安装个vue脚手架</p><p>找到vue 在这里</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572157762872.png" alt="1572157762872"></p><p>放到全局，有效果</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572157803313.png" alt="1572157803313"></p><p>使用forever 后台运行</p><p><a href="https://github.com/foreversd/forever" target="_blank" rel="noopener">https://github.com/foreversd/forever</a></p><p><code>npm install forever -g</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ forever start app.js          #启动</span><br><span class="line">$ forever stop app.js           #关闭</span><br></pre></td></tr></table></figure><h3 id="打包上线"><a href="#打包上线" class="headerlink" title="打包上线"></a>打包上线</h3><p>实验做得差不多了，给我的CityMALL打包上线</p><h3 id="linux下安装mongodb"><a href="#linux下安装mongodb" class="headerlink" title="linux下安装mongodb"></a>linux下安装mongodb</h3><ol><li>在官方下找到下载路径,CentOS红帽子公司的</li></ol><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572253297039.png" alt="1572253297039"></p><p><code>wget 路径</code></p><ol start="2"><li>下载完后解压到这个目录，没有创建</li></ol><p><code>tar -zxvf mongodb-linux-x86_64-rhel70-4.2.1.tgz -C /usr/local/mongoDB/</code></p><p>名字太长了，改个名<code># mv mongodb-linux-x86_64-rhel70-4.2.1 mongodbserver</code></p><ol start="3"><li><p>创建data数据，log日志，etc配置 文件夹</p><p>创建配置文件mongodb.conf</p></li></ol><p><code>cd /usr/local/mongoDB/mongodbserver/etc</code></p><p><code>vim mongodb.conf</code></p><blockquote><p> 从mongodb3.2开始默认的存储引擎是WiredTiger，3.3版本之前的默认存储引擎是MMAPv1，mongodb4.x版本不再支持MMAPv1存储引擎。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dbpath=/usr/local/mongoDB/mongodbserver/data/db #数据存放</span><br><span class="line">logpath=/usr/local/mongoDB/mongodbserver/data/logs/mongodb.log #日志存放</span><br><span class="line">port=27017 #端口</span><br><span class="line">logappend=true #追加方式写日志  </span><br><span class="line">noauth=true #不启用验证  </span><br><span class="line">fork=true #可在后台运行</span><br><span class="line">journal=true #每次写入会记录一条操作</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>添加环境变量</strong></li></ol><ul><li>在/etc/profile文件中，文末添加 export  <code>vim /etc profile</code></li></ul><p><code>export PATH=$PATH:/usr/local/mongoDB/mongodbserver/bin</code></p><p>执行``source /etc/profile`，使系统环境变量立即生效</p><ul><li>将mongo路径软链到/usr/bin路径下，方便随处执行mongo命令</li></ul><p>执行命令: <code>ln -s /usr/local/mongoDB/mongodbserver/bin/mongo  /usr/bin/mongo</code></p><p>通过配置文件运行，mongod</p><p><code># mongod --config /usr/local/mongoDB/mongodbserver/etc/mongodb.conf</code></p><p>运行mongo成功👍</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572262020655.png" alt="1572262020655"></p><p>到database 初始化mongoDB创建schema</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572442011030.png" alt="1572442011030"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"><span class="keyword">const</span> db = <span class="string">"mongodb://localhost/shoppingMall"</span></span><br><span class="line"><span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">'glob'</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line">exports.initSchemas = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    glob.sync(resolve(__dirname, <span class="string">'./schema'</span>, <span class="string">'**/*.js'</span>)).forEach(<span class="built_in">require</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据库导入，修正"><a href="#数据库导入，修正" class="headerlink" title="数据库导入，修正"></a>数据库导入，修正</h3><p>之前写了api，直接在浏览器中输入，执行命令</p><p>之前的白酒分类是错的把它修正</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572488999983.png" alt="1572488999983"></p><h3 id="老是出现node-modules错误"><a href="#老是出现node-modules错误" class="headerlink" title="老是出现node_modules错误"></a>老是出现node_modules错误</h3><p>windows<code>cnpm install rimraf -g</code></p><p><code>rm -f /node_modules</code></p><p>linux <code>rm -rf node_modules</code></p><p>一般都是把node_modules删除重新下载<code>cnpm install</code>，有些还不能删除强行移动文件夹就行了</p><h3 id="不挂断在后台运行"><a href="#不挂断在后台运行" class="headerlink" title="不挂断在后台运行"></a>不挂断在后台运行</h3><ol><li><p>nohup<br> nohup 是 no hang up 的缩写，就是不挂断的意思。nohup 命令运行由 Command参数和任何相关的 Arg参数指定的命令，忽略所有挂断（SIGHUP）信号。</p></li><li><p>&amp;</p><p> &amp;是指在后台运行，但当用户推出(挂起)的时候，命令自动也跟着退出。</p></li></ol><p>使用命令  nohup COMMAND &amp;  这样就能使命令永久的执行下去，关闭终端窗口、Ctrl+c 、断开SSH连接都不会影响其运行，并且可以使用标准输入，终端能够接收任何输入，重定向标准输出和标准错误到当前目录下的nohup.out文件。</p><h3 id="前台打包成静态文件"><a href="#前台打包成静态文件" class="headerlink" title="前台打包成静态文件"></a>前台打包成静态文件</h3><p>​    <code>npm run build</code> 生成dist文件夹放入service，直接就可以使用了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> staticFiles = <span class="built_in">require</span>(<span class="string">'koa-static'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定 dist目录为静态资源目录，用来存放 js css images 等</span></span><br><span class="line">app.use(staticFiles(path.resolve(__dirname, <span class="string">"./dist"</span>)))</span><br></pre></td></tr></table></figure><p>在手机测试成功后心情豁然开朗😎</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572520037662.png" alt="1572520037662"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;服务器部署node教程（二）&quot;&gt;&lt;a href=&quot;#服务器部署node教程（二）&quot; class=&quot;headerlink&quot; title=&quot;服务器部署node教程（二）&quot;&gt;&lt;/a&gt;服务器部署node教程（二）&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 期间经历了很多坑，多数还是找到了解决办法，相信经历了第一次，以后就能孰能生巧了。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h3 id=&quot;安装最新的node-js环境&quot;&gt;&lt;a href=&quot;#安装最新的node-js环境&quot; class=&quot;headerlink&quot; title=&quot;安装最新的node.js环境&quot;&gt;&lt;/a&gt;安装最新的node.js环境&lt;/h3&gt;
    
    </summary>
    
    
      <category term="服务器部署" scheme="http://yoursite.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="部署" scheme="http://yoursite.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
      <category term="服务器" scheme="http://yoursite.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>阿里云部署新手教程（一）（购买服务器，免密登陆）</title>
    <link href="http://yoursite.com/2019/10/25/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B2%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2019/10/25/阿里云部署新手教程（一）/</id>
    <published>2019-10-25T15:20:21.851Z</published>
    <updated>2019-10-26T14:40:07.928Z</updated>
    
    <content type="html"><![CDATA[<h1 id="阿里云部署项目新手教程（一）"><a href="#阿里云部署项目新手教程（一）" class="headerlink" title="阿里云部署项目新手教程（一）"></a>阿里云部署项目新手教程（一）</h1><h2 id="（购买服务器，免密登陆）"><a href="#（购买服务器，免密登陆）" class="headerlink" title="（购买服务器，免密登陆）"></a>（购买服务器，免密登陆）</h2><h3 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h3><p>阿里云有学生优惠10元一个月，我选择的是轻量应用服务器，有ssd内存，更高的带宽，但是限量1000G应该够用。选择系统镜像CentOS操作系统。</p><a id="more"></a><p>轻量应用服务器操作起来更简单。</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572003725828.png" alt="1572003725828"></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572004461160.png" alt="1572004461160"></p><h3 id="如何远程连接"><a href="#如何远程连接" class="headerlink" title="如何远程连接"></a>如何远程连接</h3><p>打开cmd终端输入<code>ssh root@0.0.0.0</code>root表示根用户名@后面接公网IP地址</p><p>连上来了</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572004847359.png" alt="1572004847359"></p><h3 id="保存ssh公钥免密登陆"><a href="#保存ssh公钥免密登陆" class="headerlink" title="保存ssh公钥免密登陆"></a>保存ssh公钥免密登陆</h3><p>终端 在~目录下 cd .ssh 进去.ssh文件夹，输入，没有ssh文件夹 创建 <code>md .ssh</code> bash<code>mkdir</code></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "myemail@myemail.com"</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter file in which to save the key (/home/Administrator/.ssh/id_rsa): C:\Users\Administrator\.ssh\id_rsa</span><br></pre></td></tr></table></figure><p>然后它会要你填写地址，dos得自己填，要不然会报错，因为unix命令都是相反的斜杠，成功之后生成了公钥私钥文件</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572008937745.png" alt="1572008937745"></p><p><strong>然后改回bash终端写命令，dos cmd 太不兼容了😥，全是坑，用git bash，ubantu bash 都可</strong></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572009417347.png" alt="1572009417347"></p><p><code>scp id_rsa.pub root@0.0.0.0:.</code></p><p>解释：复制 这个公钥 到你服务器root用户下的（默认文件夹下<code>:.</code>）</p><p>登陆服务器检查一下，文件已经过来了</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572009688607.png" alt="1572009688607"></p><p><code># cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</code>把公钥文件追加进来</p><p><code>vim</code>打开这个文件确认一下</p><p>然后重启一下<code># systemctl restart sshd</code></p><p>回到本地，删了公钥<code>$ rm id_rsa.pub</code></p><p>新建配置文件</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572010250446.png" alt="1572010250446"></p><p><code>$ code config</code>vscode 打开config,配置</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572010927402.png" alt="1572010927402"></p><p><code>ssh 用户名</code>免密登陆成功😎 </p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572010957144.png" alt="1572010957144"></p><h3 id="git-push-到github-ssh-免密推送"><a href="#git-push-到github-ssh-免密推送" class="headerlink" title="git push 到github ssh 免密推送"></a>git push 到github ssh 免密推送</h3><p>把之前的公钥写进来</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572015770953.png" alt="1572015770953"></p><p>把https推送修改成ssh推送</p><p><code>git remote set-url origin +ssh链接</code></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572015579162.png" alt="1572015579162"></p><p>免密推送成功😎</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/nodeToService/1572015804042.png" alt="1572015804042"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;阿里云部署项目新手教程（一）&quot;&gt;&lt;a href=&quot;#阿里云部署项目新手教程（一）&quot; class=&quot;headerlink&quot; title=&quot;阿里云部署项目新手教程（一）&quot;&gt;&lt;/a&gt;阿里云部署项目新手教程（一）&lt;/h1&gt;&lt;h2 id=&quot;（购买服务器，免密登陆）&quot;&gt;&lt;a href=&quot;#（购买服务器，免密登陆）&quot; class=&quot;headerlink&quot; title=&quot;（购买服务器，免密登陆）&quot;&gt;&lt;/a&gt;（购买服务器，免密登陆）&lt;/h2&gt;&lt;h3 id=&quot;购买服务器&quot;&gt;&lt;a href=&quot;#购买服务器&quot; class=&quot;headerlink&quot; title=&quot;购买服务器&quot;&gt;&lt;/a&gt;购买服务器&lt;/h3&gt;&lt;p&gt;阿里云有学生优惠10元一个月，我选择的是轻量应用服务器，有ssd内存，更高的带宽，但是限量1000G应该够用。选择系统镜像CentOS操作系统。&lt;/p&gt;
    
    </summary>
    
    
      <category term="服务器部署" scheme="http://yoursite.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="部署，服务器" scheme="http://yoursite.com/tags/%E9%83%A8%E7%BD%B2%EF%BC%8C%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>1024程序员节+项目总结+日常</title>
    <link href="http://yoursite.com/2019/10/24/1024%E7%A8%8B%E5%BA%8F%E5%91%98%E8%8A%82/"/>
    <id>http://yoursite.com/2019/10/24/1024程序员节/</id>
    <published>2019-10-24T15:58:56.751Z</published>
    <updated>2019-10-26T14:38:21.026Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1024程序员节-项目总结-日常"><a href="#1024程序员节-项目总结-日常" class="headerlink" title="1024程序员节+项目总结+日常"></a>1024程序员节+项目总结+日常</h1><blockquote><p> 今天程序员过节，自己呢，从学生向程序员慢慢进发了。</p></blockquote><p>学习了一年多，觉得自己也算是入门前端这个领域了。虽然是很日常的一天，但纪念第一次有了从学生到程序员的认同感的节日是有意义的。</p><a id="more"></a><p><strong>说说我今天日常的一天。</strong></p><p>上午买了腾讯课堂的项目部署打折，这个商城项目写得也差不多了，在手机上测试了一下，修改了一些些bug</p><p><strong>1.点击商品详情页商品信息重复没有刷新</strong></p><p>是由于之前为了页面不刷新加了<code>&lt;keep-alive&gt;</code>导致所有页面重复加载就不会触发刷新。</p><p>在router index.js 文件下      <code>meta: {  keepAlive:false //不需要被缓存的组件 }</code>在不需要缓存的页面加上配置。</p><p>在App.vue 文件下 对需要缓存的页面做一个判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive&gt;</span><br><span class="line">&lt;router-view v-if=&quot;$route.meta.keepAlive&quot; /&gt;</span><br><span class="line">&lt;/keep-alive&gt;</span><br><span class="line">&lt;router-view v-if=&quot;!$route.meta.keepAlive&quot; /&gt;</span><br></pre></td></tr></table></figure><p><strong>2.如何在手机端调试写好的程序</strong></p><ul><li><p>首先要在同一个局域网下，手机与电脑在同一个局域网内，<strong>把防火墙关了</strong>，防火墙是个大坑，试了好久</p></li><li><p>cmd终端命令<code>ipconfig</code> 查看无线网的IP地址，在config&gt;index.js 配置下      <code>host: &#39;192.168.137.1&#39;,</code>  域名改成你的IP</p></li><li><p>请求接口配置文件也改成你的IP<code>const LOCALURL = &quot;http://192.168.137.1:3000/&quot;</code>成功访问后台接口</p></li><li><p>如果有json-server 模拟数据，在package.json=&gt;scripts下把host改为0.0.0.0就可以让所有IP访问到</p></li></ul><p><code>&quot;json:server&quot;: &quot;json-server --watch --host 0.0.0.0 --port 3001 goods.json&quot;</code></p><h3 id="项目总结"><a href="#项目总结" class="headerlink" title="项目总结"></a>项目总结</h3><p>前期跟着老师视屏做，照着视频敲，学完后发现这个项目不太完善，页面很多功能都没做，老师的教程也结束了，烂尾了，在掘金看技术胖的赞那么多，觉得看他的视频总没错，只能说期望太高了。那就只有自己就把一些不满意的地方都改了，这样也好，能有自己思考的空间。</p><p><strong>个人页面</strong>直接没讲，我就自己加了有赞的个人页面框架，把<strong>登陆注册</strong>加进去了。其他功能接口都没写。</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1572017219183.png" alt="1572017219183"></p><p><strong>购物车</strong>UI也做了相应优化，计算总价，checkbox。</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1572017252727.png" alt="1572017252727"></p><p><strong>商品详情</strong>统一用了vantUI组件，之前实在难看。</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1572017542406.png" alt="1572017542406"></p><p><strong>列表商品</strong>之前爬的图片链接失效，直接在后台把失效图片给洗了一遍。</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1572017315053.png" alt="1572017315053"></p><p>使用axios请求，把能请求到的数据写入新文件，请求不到就抛弃。之前先存一个数组，再一概写进去这是不行的，会返回一个空数组。多个异步请求，函数直接返回了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">newData.map(<span class="keyword">async</span>(value, index) =&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> result = <span class="keyword">await</span> axios.get(value.IMAGE1)</span><br><span class="line">                <span class="comment">//console.log(value)</span></span><br><span class="line">                fs.appendFile(<span class="string">'./data_json/newGoods2.json'</span>,<span class="built_in">JSON</span>.stringify(value)+<span class="string">','</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err, ret</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(err) &#123;<span class="keyword">throw</span> err&#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">            &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(err + <span class="string">'bb'</span>)</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>也算彻底弄懂了JS的运行顺序，异步同步，宏任务微任务，还有async/await，看了几篇文章。以后再单独拿出来一篇文章总结把。</p><p>mongoDB数据库，增加了一个休闲食品类别，把食品饮料栏变为两栏，要不然这一栏的子分类太多了，还有一个白酒的分类，里面数据却全是生鲜，技术胖老师完全不走心。我全都改了。</p><p>后期，还要把<strong>首页的所有图片链接跳转商品详情</strong>给完善了，</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1572017598297.png" alt="1572017598297"></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1572017627898.png" alt="1572017627898"></p><p><em>第二天完善了</em></p><p>首页分类跳到分类详情，在分类栏绑定@click方法，传入ID值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">goCategory(index)&#123;</span><br><span class="line">  <span class="comment">//console.log(index)</span></span><br><span class="line">  <span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>:<span class="string">'CategoryList'</span>,<span class="attr">params</span>:&#123;<span class="attr">mallCategoryId</span>:index&#125;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跳转到商品分类，然后在<code>activated()</code>钩子函数中把具体页号传过来，默认第一个</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">activated() &#123;</span><br><span class="line">  <span class="keyword">let</span> firstCategoryIndex = <span class="keyword">this</span>.$route.params.mallCategoryId || <span class="number">0</span></span><br><span class="line">  <span class="keyword">this</span>.clickCategory(firstCategoryIndex, firstCategoryIndex + <span class="number">1</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>应用clickCategory方法点击到指定分类栏。</p><p>之前写在<code>create()</code>钩子中，没有效果，问题页面是keep-alive存在缓存，不会重新加载。</p><p><strong>知识点</strong>:    钩子函数的执行顺序</p><p>使用<code>keep-alive</code>的初次加载顺序</p><p><code>beforeRouteEnter --&gt; created --&gt; mounted --&gt; activated --&gt; deactivated</code> </p><p>再次进入缓存的页面，只会触发<code>beforeRouteEnter --&gt;activated --&gt; deactivated</code></p><p>created和mounted不会再执行。</p><p>关于vue的路由还需要继续升入了解，现在知道的还太浅了。</p><p>之后学习一下怎么挂在服务器。</p><hr><h3 id="说一说傍晚的狗血京东校招"><a href="#说一说傍晚的狗血京东校招" class="headerlink" title="说一说傍晚的狗血京东校招"></a>说一说傍晚的狗血京东校招</h3><p>群里通知说今天晚上有京东的校招，下午赶紧把简历完善了去试试水。</p><p>兴致勃勃去那里，开始宣讲，先是说京东怎么待遇好，几万员工，什么环境，强东哥怎么怎么厉害。然后ppt开始显示<strong>京东顾问</strong>？？？我觉得好像是京东，不对劲，讲师开始宣传怎么当客服来了。三千一个月的京东<strong>客服</strong>，太会蹭京东的热点了，还只招客服3000一个月。。。“就没人提问了吗，都是家里有矿的可以走了”，然后我叫室友一起溜走了。本科生当客服，真有人愿意吗？纯体力活，不值得给强哥卖命，有时间还是学点真本事吧。</p><h3 id="再说一说上周的狗血拓维"><a href="#再说一说上周的狗血拓维" class="headerlink" title="再说一说上周的狗血拓维"></a>再说一说上周的狗血拓维</h3><p>去拓维看热闹。校招招60个java，就5个前端，笔试题全是java，就只有两个前端题一个填空，数组合并字符串：<code>arr.join(&#39;&#39;)</code>，手写代码打点计时器用<code>setinterval+闭包函数</code>写了，交个白卷勾个前端，走了。</p><p>结果回来路上打电话，叫回去面试，面试官说他是团队LEADER，java后台但是懂一些前端。</p><p>面试官问我小程序生命周期，学了几个月我有点模糊忘记了，硬着头皮把vue生命周期说得头头是道,面试官说我‘说得不错’。</p><p>然后要我写个移动登陆布局，他rem都不知道，他觉得rem是栅格布局，跟他解释根元素字体大小都不懂，他把rem理解为栅格布局？？</p><p><code>transform：translate</code>也不知道我说是位移,他硬是说动画，我说动画是<code>transition</code>或者用<code>animation</code>可以实现，估计他没听懂，说我平常是不是复制粘贴。</p><p>我说我没有，我都是自己写代码，我觉得可能登陆布局没什么好证明实力的，立马给他手写了个双飞翼部。就叫我等通知就没有然后了。</p><p>我觉得根本不懂前端基础就来面试别人，不懂装懂批判别人很可耻，现场没有前端可以电话别的前端同事阿。</p><p>拉黑拓维公司，大一期末的时候，给粮食局装新系统，招实习生去装，我积极报名了，期末过后培训了三天结果还是水了我们四个大一的，就去了一个大一，其余都是大二大三一个没刷，根本没有一行代码，就是装系统体力活，凭什么刷我们低年级。</p><p>算是看透这个公司了，给政府，华为做外包，其美名曰：‘战略合作’。</p><hr><p>吐槽归吐槽，毕竟二流本科，也没什么好资源，要怪也只能怪自己高中只有这个水平进这样的学校。有机会进来工作室，也算是一种幸运，看外面的世界，心态格局就跟班上有些还在浑浑噩噩度日不是一个档次了，努力努力争取跳出平凡。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1024程序员节-项目总结-日常&quot;&gt;&lt;a href=&quot;#1024程序员节-项目总结-日常&quot; class=&quot;headerlink&quot; title=&quot;1024程序员节+项目总结+日常&quot;&gt;&lt;/a&gt;1024程序员节+项目总结+日常&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 今天程序员过节，自己呢，从学生向程序员慢慢进发了。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;学习了一年多，觉得自己也算是入门前端这个领域了。虽然是很日常的一天，但纪念第一次有了从学生到程序员的认同感的节日是有意义的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>vue.js商城项目（九）tabbar</title>
    <link href="http://yoursite.com/2019/10/21/vue.js%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%B9%9D%EF%BC%89tabbar/"/>
    <id>http://yoursite.com/2019/10/21/vue.js商城项目（九）tabbar/</id>
    <published>2019-10-21T08:25:16.302Z</published>
    <updated>2019-10-21T08:25:16.303Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-js商城项目（九）tabbar"><a href="#vue-js商城项目（九）tabbar" class="headerlink" title="vue.js商城项目（九）tabbar"></a>vue.js商城项目（九）tabbar</h1><h3 id="取消路由中的-号"><a href="#取消路由中的-号" class="headerlink" title="取消路由中的#号"></a>取消路由中的#号</h3><p>在new Router()的下一行添加上：mode: ‘history’,</p><a id="more"></a><h3 id="使用vant-tabBar组件"><a href="#使用vant-tabBar组件" class="headerlink" title="使用vant tabBar组件"></a>使用vant tabBar组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;van-tabbar</span><br><span class="line">      v-model=&quot;active&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;van-tabbar-item icon=&quot;shop&quot; to=&apos;/&apos;&gt;首页&lt;/van-tabbar-item&gt;</span><br><span class="line">      &lt;van-tabbar-item icon=&quot;records&quot; to=&apos;/CategoryList&apos;&gt;分类&lt;/van-tabbar-item&gt;</span><br><span class="line">      &lt;van-tabbar-item icon=&quot;cart&quot; to=&apos;/Cart&apos;&gt;购物车&lt;/van-tabbar-item&gt;</span><br><span class="line">      &lt;van-tabbar-item icon=&quot;contact&quot; to=&apos;User&apos;&gt;我的&lt;/van-tabbar-item&gt;</span><br><span class="line">    &lt;/van-tabbar&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name:&apos;Tab&apos;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      active: 0,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    $route(to, from) &#123;</span><br><span class="line">      console.log(to)</span><br><span class="line">      switch (to.fullPath) &#123;</span><br><span class="line">        case &apos;/&apos;:</span><br><span class="line">          this.active = 0;</span><br><span class="line">          break;</span><br><span class="line">        case &apos;/CategoryList&apos;:</span><br><span class="line">          this.active = 1;</span><br><span class="line">          break;</span><br><span class="line">        case &apos;/Cart&apos;:</span><br><span class="line">          this.active = 2;</span><br><span class="line">          break;</span><br><span class="line">        case &apos;/User&apos;:</span><br><span class="line">          this.active = 3;</span><br><span class="line">          break;</span><br><span class="line">        default:</span><br><span class="line">          this.active = 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在App.vue中写入组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;keep-alive&gt;</span><br><span class="line">    &lt;router-view/&gt;</span><br><span class="line">    &lt;/keep-alive&gt;</span><br><span class="line">    &lt;Tab v-show=&quot;!$route.meta.fullScreen&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Tab from &apos;@/components/pages/Tab&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;App&apos;,</span><br><span class="line">  components:&#123;</span><br><span class="line">    Tab</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在router中如果不是首级，设置全屏</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">meta: &#123;</span><br><span class="line">    fullScreen: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main.js中就可以做出判断</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vue-js商城项目（九）tabbar&quot;&gt;&lt;a href=&quot;#vue-js商城项目（九）tabbar&quot; class=&quot;headerlink&quot; title=&quot;vue.js商城项目（九）tabbar&quot;&gt;&lt;/a&gt;vue.js商城项目（九）tabbar&lt;/h1&gt;&lt;h3 id=&quot;取消路由中的-号&quot;&gt;&lt;a href=&quot;#取消路由中的-号&quot; class=&quot;headerlink&quot; title=&quot;取消路由中的#号&quot;&gt;&lt;/a&gt;取消路由中的#号&lt;/h3&gt;&lt;p&gt;在new Router()的下一行添加上：mode: ‘history’,&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>vue.js商城项目（八）购物车</title>
    <link href="http://yoursite.com/2019/10/17/vue.js%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%EF%BC%88%E5%85%AB%EF%BC%89/"/>
    <id>http://yoursite.com/2019/10/17/vue.js商城项目（八）/</id>
    <published>2019-10-17T11:19:12.020Z</published>
    <updated>2019-10-24T03:31:50.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-js商城项目（八）购物车"><a href="#vue-js商城项目（八）购物车" class="headerlink" title="vue.js商城项目（八）购物车"></a>vue.js商城项目（八）购物车</h1><h3 id="得到购物车数据方法编写"><a href="#得到购物车数据方法编写" class="headerlink" title="得到购物车数据方法编写"></a>得到购物车数据方法编写</h3><p>先要取得localStorage里的数据，我们先在data里注册两个属性<code>cartInfo</code>(购物车中商品的信息)和<code>isEmpty</code>（购物是否为空的标识，方便页面呈现）,然后再编写具体的<code>getCartInfo()</code>方法</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//得到购物车的商品</span></span><br><span class="line">  getCartInfo() &#123;</span><br><span class="line">    <span class="comment">//判断localStorage里是否有购物车数据</span></span><br><span class="line">    <span class="keyword">if</span> (localStorage.cartInfo) &#123;</span><br><span class="line">      <span class="comment">//如果有数据，我们去除并赋值给cartInfo</span></span><br><span class="line">      <span class="keyword">this</span>.cartInfo = <span class="built_in">JSON</span>.parse(localStorage.cartInfo)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打印到控制台查看效果</span></span><br><span class="line">    <span class="comment">//console.log(' this.cartInfo:' + JSON.stringify(this.cartInfo))</span></span><br><span class="line">    <span class="keyword">this</span>.isEmpty = <span class="keyword">this</span>.cartInfo.length &gt; <span class="number">0</span> ? <span class="literal">false</span> : <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h3 id="加入购物车的方法"><a href="#加入购物车的方法" class="headerlink" title="加入购物车的方法"></a>加入购物车的方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">addGoodsToCart() &#123;</span><br><span class="line">      <span class="comment">//取出购物车内的商品数据</span></span><br><span class="line">      <span class="keyword">let</span> cartInfo = localStorage.cartInfo ? <span class="built_in">JSON</span>.parse(localStorage.cartInfo) : []</span><br><span class="line">      <span class="comment">//判断购物车内是否已经有这个商品</span></span><br><span class="line">      <span class="comment">//如果没有返回undeifnd，如果有返回第一个查找到的数据</span></span><br><span class="line">      <span class="keyword">let</span> isHaveGoods = cartInfo.find(<span class="function"><span class="params">cart</span> =&gt;</span> cart.goodsId == <span class="keyword">this</span>.goodsId)</span><br><span class="line">      <span class="built_in">console</span>.log(isHaveGoods)</span><br><span class="line">      <span class="keyword">if</span> (!isHaveGoods) &#123;</span><br><span class="line">        <span class="comment">//没有商品直接添加到数组中</span></span><br><span class="line">        <span class="comment">//重新组成添加到购物车的信息</span></span><br><span class="line">        <span class="keyword">let</span> newGoodsInfo = &#123;</span><br><span class="line">          goodsId: <span class="keyword">this</span>.goodsInfo.ID,</span><br><span class="line">          Name: <span class="keyword">this</span>.goodsInfo.NAME,</span><br><span class="line">          price: <span class="keyword">this</span>.goodsInfo.PRESENT_PRICE,</span><br><span class="line">          image: <span class="keyword">this</span>.goodsInfo.IMAGE1,</span><br><span class="line">          count: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        cartInfo.push(newGoodsInfo) <span class="comment">//添加到购物车</span></span><br><span class="line">        localStorage.cartInfo = <span class="built_in">JSON</span>.stringify(cartInfo) <span class="comment">//操作本地数据</span></span><br><span class="line">        Toast.success(<span class="string">'添加成功'</span>)</span><br><span class="line"></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Toast.success(<span class="string">'已有此商品'</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">this</span>.$router.push(&#123; <span class="attr">name</span>: <span class="string">'Cart'</span> &#125;)  <span class="comment">//进行跳转</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h3 id="计算总价"><a href="#计算总价" class="headerlink" title="计算总价"></a>计算总价</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    totalMoney() &#123;</span><br><span class="line">      <span class="keyword">let</span> allMoney = <span class="number">0</span></span><br><span class="line">      <span class="keyword">this</span>.cartInfo.forEach(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        allMoney += item.price * item.count</span><br><span class="line">      &#125;)</span><br><span class="line">      localStorage.cartInfo = <span class="built_in">JSON</span>.stringify(<span class="keyword">this</span>.cartInfo)</span><br><span class="line">      <span class="keyword">return</span> allMoney</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h3 id="修改购物车计数器事件"><a href="#修改购物车计数器事件" class="headerlink" title="修改购物车计数器事件"></a>修改购物车计数器事件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-checkbox</span></span></span><br><span class="line"><span class="tag">         <span class="attr">class</span>=<span class="string">"card-goods__item"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">v-for</span>=<span class="string">"(item,index) in cartInfo"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:key</span>=<span class="string">"index"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:name</span>=<span class="string">"item.goodsId"</span></span></span><br><span class="line"><span class="tag">       &gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">van-card</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:title</span>=<span class="string">"item.Name"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:num</span>=<span class="string">"item.count"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:price</span>=<span class="string">"item.price"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:thumb</span>=<span class="string">"item.image"</span></span></span><br><span class="line"><span class="tag">           @<span class="attr">click.stop</span></span></span><br><span class="line"><span class="tag">         &gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">van-stepper</span></span></span><br><span class="line"><span class="tag">             <span class="attr">slot</span>=<span class="string">"footer"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">v-model</span>=<span class="string">"item.count"</span></span></span><br><span class="line"><span class="tag">             </span></span><br><span class="line"><span class="tag">           /&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">van-card</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">van-checkbox</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">van-checkbox-group</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1571473946368.png" alt="1571473946368"></p><p>点击stepper时会触发checkbox的事件，用@click.stop阻止card内部事件冒泡</p><h3 id="计算总价-1"><a href="#计算总价-1" class="headerlink" title="计算总价"></a>计算总价</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">totalMoney() &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.cartInfo.reduce(<span class="function">(<span class="params">total, item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> total + (<span class="keyword">this</span>.checkedGoods.indexOf(item.goodsId) !== <span class="number">-1</span> ? item.price*item.count : <span class="number">0</span>)</span><br><span class="line">  &#125;, <span class="number">0</span>)*<span class="number">100</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>可以用一行代码写出来，为了清晰写了两行，使用reduce函数增加总价，判断打勾的商品，如果存在就用价格乘以数量，如果不存在加0.</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1571568902600.png" alt="1571568902600"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-checkbox</span><br><span class="line">  class=&quot;card-goods__item&quot;</span><br><span class="line">  v-for=&quot;(item,index) in cartInfo&quot;</span><br><span class="line">  :key=&quot;index&quot;</span><br><span class="line">  :name=&quot;item.goodsId&quot;</span><br><span class="line">  v-model=&quot;checked&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>在vant组件中，<code>：name</code>属性中的值会存入<code>data()  checkedGoods: [], //是否选中的物品</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vue-js商城项目（八）购物车&quot;&gt;&lt;a href=&quot;#vue-js商城项目（八）购物车&quot; class=&quot;headerlink&quot; title=&quot;vue.js商城项目（八）购物车&quot;&gt;&lt;/a&gt;vue.js商城项目（八）购物车&lt;/h1&gt;&lt;h3 id=&quot;得到购物车数据方法编写&quot;&gt;&lt;a href=&quot;#得到购物车数据方法编写&quot; class=&quot;headerlink&quot; title=&quot;得到购物车数据方法编写&quot;&gt;&lt;/a&gt;得到购物车数据方法编写&lt;/h3&gt;&lt;p&gt;先要取得localStorage里的数据，我们先在data里注册两个属性&lt;code&gt;cartInfo&lt;/code&gt;(购物车中商品的信息)和&lt;code&gt;isEmpty&lt;/code&gt;（购物是否为空的标识，方便页面呈现）,然后再编写具体的&lt;code&gt;getCartInfo()&lt;/code&gt;方法&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>vue.js商城项目（七）</title>
    <link href="http://yoursite.com/2019/10/15/vue.js%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%B8%83%EF%BC%89/"/>
    <id>http://yoursite.com/2019/10/15/vue.js商城项目（七）/</id>
    <published>2019-10-15T09:43:05.070Z</published>
    <updated>2019-10-31T11:29:37.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-js商城项目（七）"><a href="#vue-js商城项目（七）" class="headerlink" title="vue.js商城项目（七）"></a>vue.js商城项目（七）</h1><h3 id="数据提纯"><a href="#数据提纯" class="headerlink" title="数据提纯"></a>数据提纯</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(<span class="string">'./goods.json'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> newData = <span class="built_in">JSON</span>.parse(data)</span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> pushData = []</span><br><span class="line">    newData.RECORDS.map(<span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (value.IMAGE1 != <span class="literal">null</span>) &#123;</span><br><span class="line">            i++</span><br><span class="line">            <span class="built_in">console</span>.log(value.NAME)</span><br><span class="line">            pushData.push(value)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    fs.writeFile(<span class="string">'./newGoods.json'</span>, <span class="built_in">JSON</span>.stringify(pushData), <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) <span class="built_in">console</span>.log(<span class="string">'写文件操作失败'</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">console</span>.log(<span class="string">'写文件操作成功'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><a id="more"></a><p>提取有图的json数据</p><h3 id="存入mongoose"><a href="#存入mongoose" class="headerlink" title="存入mongoose"></a>存入mongoose</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(<span class="string">'./newGoods.json'</span>, <span class="string">'utf8'</span>, (err, data) =&gt; &#123;</span><br><span class="line">        data = <span class="built_in">JSON</span>.parse(data)</span><br><span class="line">        <span class="keyword">let</span> saveCount = <span class="number">0</span></span><br><span class="line">        <span class="keyword">const</span> Goods = mongoose.model(<span class="string">'Goods'</span>)</span><br><span class="line">        data.map(<span class="function">(<span class="params">value, index</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//console.log(value)</span></span><br><span class="line">            <span class="keyword">let</span> newGoods = <span class="keyword">new</span> Goods(value)</span><br><span class="line">            newGoods.save().then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                saveCount++</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'成功'</span> + saveCount)</span><br><span class="line">            &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'失败：'</span> + error)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1570762124307.png" alt="1570762124307"></p><h3 id="双栏列表"><a href="#双栏列表" class="headerlink" title="双栏列表"></a>双栏列表</h3><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1571132512573.png" alt="1571132512573"></p><p>前端axios请求后台，后台查询数据库</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">  getCategory() &#123;</span><br><span class="line">    axios(&#123;</span><br><span class="line">      url: url.getCategoryList,</span><br><span class="line">      method: <span class="string">'get'</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">      .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//console.log(response)</span></span><br><span class="line">        <span class="keyword">if</span> (response.data.code == <span class="number">200</span> &amp;&amp; response.data.message) &#123;</span><br><span class="line">          <span class="keyword">this</span>.category = response.data.message</span><br><span class="line">          <span class="comment">//console.log(this.category)</span></span><br><span class="line">          <span class="keyword">this</span>.getCategorySubByCategoryId(<span class="keyword">this</span>.category[<span class="number">0</span>].ID)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          Toast(<span class="string">'服务器错误，数据取得失败'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  clickCategory(index, categoryId) &#123;</span><br><span class="line">    <span class="keyword">this</span>.categoryIndex = index</span><br><span class="line">    <span class="keyword">this</span>.page = <span class="number">1</span></span><br><span class="line">    <span class="keyword">this</span>.finished = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">this</span>.goodList = []</span><br><span class="line">    <span class="keyword">this</span>.getCategorySubByCategoryId(categoryId)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//根据大类ID读取小类类别列表</span></span><br><span class="line">  getCategorySubByCategoryId(categoryId) &#123;</span><br><span class="line"></span><br><span class="line">    axios(&#123;</span><br><span class="line">      url: url.getCategorySubList,</span><br><span class="line">      method: <span class="string">'post'</span>,</span><br><span class="line">      data: &#123; <span class="attr">categoryId</span>: categoryId &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">      .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//console.log(response)</span></span><br><span class="line">        <span class="keyword">if</span> (response.data.code == <span class="number">200</span> &amp;&amp; response.data.message) &#123;</span><br><span class="line">          <span class="keyword">this</span>.categorySub = response.data.message</span><br><span class="line">          <span class="keyword">this</span>.active = <span class="number">0</span></span><br><span class="line">          <span class="keyword">this</span>.categorySubId = <span class="keyword">this</span>.categorySub[<span class="number">0</span>].ID</span><br><span class="line">          <span class="keyword">this</span>.onLoad()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          Toast(<span class="string">'服务器错误，数据取得失败'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad() &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.categorySubId = <span class="keyword">this</span>.categorySubId?<span class="keyword">this</span>.categorySubId:<span class="keyword">this</span>.categorySub[<span class="number">0</span>].ID</span><br><span class="line">      <span class="keyword">this</span>.getGoodList()</span><br><span class="line">    &#125;, <span class="number">500</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  onRefresh() &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.isRefresh = <span class="literal">false</span></span><br><span class="line">      <span class="keyword">this</span>.finished = <span class="literal">false</span></span><br><span class="line">      <span class="keyword">this</span>.goodList=[]</span><br><span class="line">      <span class="keyword">this</span>.page=<span class="number">1</span></span><br><span class="line">      <span class="keyword">this</span>.onLoad()</span><br><span class="line">    &#125;, <span class="number">500</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 获取商品列表</span></span><br><span class="line">  getGoodList() &#123;</span><br><span class="line">    axios(&#123;</span><br><span class="line">      url: url.getGoodsListByCategorySubID,</span><br><span class="line">      method: <span class="string">'post'</span>,</span><br><span class="line">      data: &#123;</span><br><span class="line">        categorySubId: <span class="keyword">this</span>.categorySubId,</span><br><span class="line">        page: <span class="keyword">this</span>.page</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">      .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(response)</span><br><span class="line">        <span class="keyword">if</span> (response.data.code == <span class="number">200</span> &amp;&amp; response.data.message.length) &#123;</span><br><span class="line">          <span class="keyword">this</span>.page++</span><br><span class="line">          <span class="keyword">this</span>.goodList = <span class="keyword">this</span>.goodList.concat(response.data.message)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.finished = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.loading = <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.finished)</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//点击子类获取商品信息</span></span><br><span class="line">  onClickCategorySub(index, title) &#123;</span><br><span class="line">    <span class="comment">//console.log( this.categorySub)</span></span><br><span class="line">    <span class="keyword">this</span>.categorySubId = <span class="keyword">this</span>.categorySub[index].ID</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.categorySubId)</span><br><span class="line">    <span class="keyword">this</span>.goodList = []</span><br><span class="line">    <span class="keyword">this</span>.finished = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">this</span>.page = <span class="number">1</span></span><br><span class="line">    <span class="keyword">this</span>.onLoad()</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vue-js商城项目（七）&quot;&gt;&lt;a href=&quot;#vue-js商城项目（七）&quot; class=&quot;headerlink&quot; title=&quot;vue.js商城项目（七）&quot;&gt;&lt;/a&gt;vue.js商城项目（七）&lt;/h1&gt;&lt;h3 id=&quot;数据提纯&quot;&gt;&lt;a href=&quot;#数据提纯&quot; class=&quot;headerlink&quot; title=&quot;数据提纯&quot;&gt;&lt;/a&gt;数据提纯&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fs.readFile(&lt;span class=&quot;string&quot;&gt;&#39;./goods.json&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;utf8&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; newData = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; pushData = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    newData.RECORDS.map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value, index&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value.IMAGE1 != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(value.NAME)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pushData.push(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fs.writeFile(&lt;span class=&quot;string&quot;&gt;&#39;./newGoods.json&#39;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.stringify(pushData), &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;写文件操作失败&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;写文件操作成功&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>复习CSS的笔记</title>
    <link href="http://yoursite.com/2019/10/15/%E5%A4%8D%E4%B9%A0CSS%E7%9A%84%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/10/15/复习CSS的笔记/</id>
    <published>2019-10-15T09:39:12.249Z</published>
    <updated>2019-10-15T10:34:17.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="复习CSS的笔记"><a href="#复习CSS的笔记" class="headerlink" title="复习CSS的笔记"></a>复习CSS的笔记</h1><h3 id="水平垂直居中"><a href="#水平垂直居中" class="headerlink" title="水平垂直居中"></a>水平垂直居中</h3><p><em>html</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>使用flex方法</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background</span>: deepskyblue;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="comment">/* 实现元素水平居中 */</span></span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="comment">/* 实现元素垂直居中 */</span></span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>CSS  移动外边距方法</li></ul><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/CSS_review/1571047255135.png" alt="1571047255135"></p><p>使用absolute百分比移动时，是按左上角点移动的，修正宽高的一半</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.child</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="comment">/* 下面两种方式均可 */</span></span><br><span class="line">  <span class="comment">/* margin-top: -50px;</span></span><br><span class="line"><span class="comment">  margin-left: -50px; */</span></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到正确图形</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/CSS_review/1571047448336.png" alt="1571047448336"></p><h3 id="引用CSS方式"><a href="#引用CSS方式" class="headerlink" title="引用CSS方式"></a>引用CSS方式</h3><ul><li><strong>行内样式</strong></li></ul><p>直接对 HTML 的标记使用 style 属性，然后将 CSS 代码直接写进去：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;color: #fff; backgournd: deepskyblue;&quot;&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>内嵌式</strong></li></ul><p>将 CSS 写 <code>&lt;head&gt;</code> 与 <code>&lt;/head&gt;</code> 之间，并且用 <code>&lt;style&gt;</code> 和 <code>&lt;/style&gt;</code> 标记进行声明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    p &#123;</span><br><span class="line">      color: #fff;</span><br><span class="line">      background: deepskyblue;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>链接式</strong></li></ul><p>通过将 <code>&lt;style&gt;</code> 上的 CSS 提起到指定的 CSS 文件上，然后通过 <code>&lt;link&gt;</code> 的方式在 HTML 上链接起来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;link href=&quot;reset.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>导入样式</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    @import url(reset.css);</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>各种方式的优先级</strong></li></ul><p>在优先级上，<strong>行内样式</strong> &gt; <strong>链接式</strong> &gt; <strong>内嵌式</strong> &gt; <strong>@import 导入式</strong>。</p><h3 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h3><ul><li>CSS 解析顺序</li></ul><p>在 CSS 的选择器中，它会按照优先级 <strong>从右向左解析</strong>，因为这样匹配元素的时候，能尽量少地查找，所以选择器最好写地简洁一点。</p><ul><li>CSS 常用选择器</li></ul><ol><li>通配符：<code>*</code></li><li>ID 选择器：<code>#ID</code></li><li>类选择器：<code>.class</code></li><li>元素选择器：<code>p</code>、<code>a</code> 等……</li><li>后代选择器：<code>p span</code>、<code>div a</code> 等……</li><li>子选择器： <code>ul&gt;li</code></li><li>伪类选择器：<code>a:hover li:nth-child</code> 等……</li><li>属性选择器：<code>input[type=&quot;text&quot;]</code> 等……</li><li>子元素选择器：<code>li:firth-child</code>、<code>p:nth-child(1)</code> 等……</li></ol><ul><li>CSS 选择器权重</li></ul><p>!important -&gt; 行内样式 -&gt; #id -&gt; .class -&gt; 元素和伪元素 -&gt; * -&gt; 继承 -&gt; 默认</p><h3 id="两列布局"><a href="#两列布局" class="headerlink" title="两列布局"></a>两列布局</h3><ul><li>优先使用flex</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body&#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        justify-content: flex-end;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.left</span>&#123;</span></span><br><span class="line">        flex: 1;</span><br><span class="line">        background: green;</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">width</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line">        background: red;</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>自适应自适应自适应自适应<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>固定固定固定固定固定固定<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/CSS_review/1571126095796.png" alt="1571126095796"></p><ul><li>左侧浮动，右侧设置margin-left 空出左侧宽度</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.left</span>&#123;</span></span><br><span class="line">     float: left;</span><br><span class="line">     width: 200px;</span><br><span class="line">     background: green;</span><br><span class="line">     height: 200px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">margin-left</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line">      background: red;</span><br><span class="line">      height: 200px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>左边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>右边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/CSS_review/1571126444923.png" alt="1571126444923"></p><h3 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a>三列布局</h3><ul><li>flex版本</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body&#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        justify-content: space-between;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.left</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line">        background: green;</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line">        background: red;</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.center</span>&#123;</span></span><br><span class="line">         flex: 1;</span><br><span class="line">         background: yellow;</span><br><span class="line">         height: 200px;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>固定<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span>自适应<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>固定<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>普通版同两列一样，左右浮动，中间板块margin出左右的宽度</li></ul><h3 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h3><p>margin负一下，左右两边顶上来，中间设个padding</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">   header&#123;</span><br><span class="line">       background: cadetblue;</span><br><span class="line">   &#125;</span><br><span class="line">   footer&#123;</span><br><span class="line">       background: antiquewhite;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="css">   <span class="selector-class">.center</span>&#123;</span></span><br><span class="line">       width: 100%;</span><br><span class="line">       background: coral;</span><br><span class="line">height: 200px;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="css">   <span class="selector-class">.main</span>&#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        width: 100%;</span><br><span class="line">        background: yellow;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.mianChild</span>&#123;</span></span><br><span class="line">        padding: 0 100px 0 200px;</span><br><span class="line">        background: yellow;</span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.left</span>&#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -100%;</span><br><span class="line"><span class="css">        <span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line">        background: green;</span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.right</span>&#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -100px;</span><br><span class="line"><span class="css">        <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line">        background: red;</span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span>我是头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mianChild"</span>&gt;</span>我是中间<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>左边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>右边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span>我是底部<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/CSS_review/1571127881156.png" alt="1571127881156"></p><ul><li>使用flex布局跟上面一样<code>justify-content: space-between;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">   header&#123;</span><br><span class="line">       background: cadetblue;</span><br><span class="line">   &#125;</span><br><span class="line">   footer&#123;</span><br><span class="line">       background: antiquewhite;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="css">   <span class="selector-class">.center</span>&#123;</span></span><br><span class="line">       background: coral;</span><br><span class="line">height: 200px;</span><br><span class="line"><span class="css"><span class="selector-tag">display</span><span class="selector-pseudo">:flex</span>;</span></span><br><span class="line">justify-content: space-between;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="css">   <span class="selector-class">.main</span>&#123;</span></span><br><span class="line">        width: 100%;</span><br><span class="line">        background: yellow;</span><br><span class="line">         flex: 1;</span><br><span class="line">         height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line"><span class="css">    <span class="selector-class">.left</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line">        background: green;</span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line">        background: red;</span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span>我是头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>左边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mianChild"</span>&gt;</span>我是中间<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>右边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span>我是底部<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="em-和-rem"><a href="#em-和-rem" class="headerlink" title="em 和 rem"></a>em 和 rem</h3><ul><li>em相对容器字体大小，容器没设置大小往父元素找</li></ul><blockquote><p>CSS继承：字体样式通常可以继承，尺寸相关样式不能继承</p></blockquote><ul><li>rem相对根元素（html元素）字体大小</li></ul><h3 id="行内元素和行内块元素"><a href="#行内元素和行内块元素" class="headerlink" title="行内元素和行内块元素"></a>行内元素和行内块元素</h3><p>都是同行显示，</p><ul><li>行内元素 <code>display:inline</code>不可设置宽高</li><li>行内块元素<code>display:inline-block</code>可以设置宽高</li></ul><h3 id="BFC-Block-Formatting-Context-块级格式化上下文"><a href="#BFC-Block-Formatting-Context-块级格式化上下文" class="headerlink" title="BFC(Block Formatting Context 块级格式化上下文)"></a>BFC(Block Formatting Context 块级格式化上下文)</h3><blockquote><p>在BFC中，每一个盒子（子元素）的左外边缘（margin-left）会触碰到容器的左边缘(border-left)（对于从右到左的格式来说，则触碰到右边缘）。浮动也是如此（尽管盒子里的行盒子 Line Box 可能由于浮动而变窄）。</p></blockquote><p><strong>BFC的特征</strong></p><p>（1）所有子元素（包含浮动元素）与容器（父元素）左边对齐</p><p>（2）属于同一个BFC的父元素和子元素，相邻的父子或者兄弟间margin垂直方向会重叠，若2个元素属于不同的BFC，则垂直方向不会重叠</p><p>（3）可以自动撑开容器（若子元素是float的，父元素设置<code>overflow:hidden</code>，父元素就形成一个BFC）</p><p><strong>创建BFC</strong>，满足下列的任意一个或多个条件即可：</p><p>1、float的值不是none。（float:left 或者float:right）</p><p>2、position的值不是static或者relative。（position:absolute或者position:fixed）</p><p>3、display的值是inline-block、table-cell、flex、table-caption或者inline-flex</p><p>4、overflow的值不是visible（overflow:hidden、overflow:scroll）           </p><p>5、父元素与正常文件流的子元素（非浮动子元素）自动形成一个BFC </p><h3 id="box-sizing的属性"><a href="#box-sizing的属性" class="headerlink" title="box-sizing的属性"></a>box-sizing的属性</h3><ul><li><code>content-box</code> W3C标准盒模型 设置width/height属性是指<strong>content</strong>部分</li><li><code>border-box</code> IE传统盒模型 设置width/height属性包括了<strong>content+padding+border</strong></li></ul><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/CSS_review/1571130210731.png" alt="1571130210731"></p><h3 id="CSS过渡"><a href="#CSS过渡" class="headerlink" title="CSS过渡"></a>CSS过渡</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">width</span> 1<span class="selector-tag">s</span> <span class="selector-tag">linear</span> 2<span class="selector-tag">s</span>;</span><br></pre></td></tr></table></figure><table><thead><tr><th><a href="https://www.w3school.com.cn/cssref/pr_transition-property.asp" target="_blank" rel="noopener">transition-property</a></th><th>规定应用过渡的 CSS 属性的名称。</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/cssref/pr_transition-duration.asp" target="_blank" rel="noopener">transition-duration</a></td><td>定义过渡效果花费的时间。默认是 0。</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_transition-timing-function.asp" target="_blank" rel="noopener">transition-timing-function</a></td><td>规定过渡效果的时间曲线。默认是 “ease”。</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_transition-delay.asp" target="_blank" rel="noopener">transition-delay</a></td><td>规定过渡效果何时开始。默认是 0。</td></tr></tbody></table><p>分别对标四个属性 解释：过渡宽度 过程一秒 匀速 延迟两米奥</p><h3 id="CSS动画"><a href="#CSS动画" class="headerlink" title="CSS动画"></a>CSS动画</h3><p><a href="https://www.runoob.com/cssref/css-animatable.html" target="_blank" rel="noopener">https://www.runoob.com/cssref/css-animatable.html</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">animation</span><span class="selector-pseudo">:myfirst</span> 5<span class="selector-tag">s</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">keyframes</span> myfirst</span><br><span class="line">&#123;</span><br><span class="line">0%   &#123;<span class="attribute">background</span>:red;&#125;</span><br><span class="line">25%  &#123;<span class="attribute">background</span>:yellow;&#125;</span><br><span class="line">50%  &#123;<span class="attribute">background</span>:blue;&#125;</span><br><span class="line">100% &#123;<span class="attribute">background</span>:green;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@keyframes 加一个动画名， 前边百分号表示时间节点</p><h3 id="超出宽度的文字省略号"><a href="#超出宽度的文字省略号" class="headerlink" title="超出宽度的文字省略号"></a>超出宽度的文字省略号</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.list-item-name</span>&#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">width</span>:X em;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多少em就是多少个字</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/CSS_review/1571132042889.png" alt="1571132042889"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;复习CSS的笔记&quot;&gt;&lt;a href=&quot;#复习CSS的笔记&quot; class=&quot;headerlink&quot; title=&quot;复习CSS的笔记&quot;&gt;&lt;/a&gt;复习CSS的笔记&lt;/h1&gt;&lt;h3 id=&quot;水平垂直居中&quot;&gt;&lt;a href=&quot;#水平垂直居中&quot; class=&quot;headerlink&quot; title=&quot;水平垂直居中&quot;&gt;&lt;/a&gt;水平垂直居中&lt;/h3&gt;&lt;p&gt;&lt;em&gt;html&lt;/em&gt;&lt;/p&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;child&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="前端, css" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF-css/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="基础" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>vue.js商城项目（六）登陆</title>
    <link href="http://yoursite.com/2019/10/10/vue.js%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%EF%BC%88%E5%85%AD%EF%BC%89%E7%99%BB%E9%99%86/"/>
    <id>http://yoursite.com/2019/10/10/vue.js商城项目（六）登陆/</id>
    <published>2019-10-10T09:00:03.983Z</published>
    <updated>2019-10-15T10:37:42.937Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-js商城项目（六）登陆"><a href="#vue-js商城项目（六）登陆" class="headerlink" title="vue.js商城项目（六）登陆"></a>vue.js商城项目（六）登陆</h1><h3 id="在User-js进行一个比较密码的函数封装"><a href="#在User-js进行一个比较密码的函数封装" class="headerlink" title="在User.js进行一个比较密码的函数封装"></a>在User.js进行一个比较密码的函数封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">userSchema.methods = &#123;</span><br><span class="line">        <span class="comment">//密码比对的方法</span></span><br><span class="line">        comparePassword: <span class="function">(<span class="params">_password, password</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">                bcrypt.compare(_password, password, (err, isMatch) =&gt; &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!err) resolve(isMatch)</span><br><span class="line">                    <span class="keyword">else</span> reject(err)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="进行接口的封装"><a href="#进行接口的封装" class="headerlink" title="进行接口的封装"></a>进行接口的封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">'/login'</span>, <span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    <span class="comment">//得到前端传递过来的数据</span></span><br><span class="line">    <span class="keyword">let</span> loginUser = ctx.request.body</span><br><span class="line">    <span class="built_in">console</span>.log(loginUser)</span><br><span class="line">    <span class="keyword">let</span> userName = loginUser.userName</span><br><span class="line">    <span class="keyword">let</span> password = loginUser.password</span><br><span class="line">        <span class="comment">//引入User的model</span></span><br><span class="line">    <span class="keyword">const</span> User = mongoose.model(<span class="string">'User'</span>)</span><br><span class="line">        <span class="comment">//查找用户名是否存在，如果存在开始比对密码</span></span><br><span class="line">    <span class="keyword">await</span> User.findOne(&#123; <span class="attr">userName</span>: userName &#125;).exec().then(<span class="keyword">async</span>(result) =&gt; &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(result)</span><br><span class="line">        <span class="keyword">if</span> (result) &#123;</span><br><span class="line">            <span class="comment">//console.log(User)</span></span><br><span class="line">            <span class="comment">//当用户名存在时，开始比对密码</span></span><br><span class="line">            <span class="keyword">let</span> newUser = <span class="keyword">new</span> User() <span class="comment">//因为是实例方法，所以要new出对象，才能调用</span></span><br><span class="line">            <span class="keyword">await</span> newUser.comparePassword(password, result.password)</span><br><span class="line">                .then(<span class="function">(<span class="params">isMatch</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">//返回比对结果</span></span><br><span class="line">                    ctx.body = &#123; <span class="attr">code</span>: <span class="number">200</span>, <span class="attr">message</span>: isMatch &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">//出现异常，返回异常</span></span><br><span class="line">                    <span class="built_in">console</span>.log(error)</span><br><span class="line">                    ctx.body = &#123; <span class="attr">code</span>: <span class="number">500</span>, <span class="attr">message</span>: error &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ctx.body = &#123; <span class="attr">code</span>: <span class="number">200</span>, <span class="attr">message</span>: <span class="string">'用户名不存在'</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error)</span><br><span class="line">        ctx.body = &#123; <span class="attr">code</span>: <span class="number">500</span>, <span class="attr">message</span>: error &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="前台axios请求"><a href="#前台axios请求" class="headerlink" title="前台axios请求"></a>前台axios请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">this</span>.$axios</span><br><span class="line">    .post(url.login, &#123;</span><br><span class="line">      userName: <span class="keyword">this</span>.username,</span><br><span class="line">      password: <span class="keyword">this</span>.password</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(response);</span><br><span class="line">      <span class="keyword">if</span> (response.data.code == <span class="number">200</span> &amp;&amp; response.data.message) &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">          localStorage.userInfo = &#123; <span class="attr">userName</span>: <span class="keyword">this</span>.username &#125;;</span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            resolve();</span><br><span class="line">          &#125;, <span class="number">500</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">          .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            Toast.success(<span class="string">"登录成功"</span>);</span><br><span class="line">            <span class="keyword">this</span>.$router.push(<span class="string">"/"</span>);</span><br><span class="line">          &#125;)</span><br><span class="line">          .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            Toast.fail(<span class="string">"登陆状态保存失败"</span>);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125; </span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        Toast.fail(<span class="string">"登录失败"</span>);</span><br><span class="line">        <span class="keyword">this</span>.openLoading = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(error);</span><br><span class="line">      Toast.fail(<span class="string">"登录失败"</span>);</span><br><span class="line">      <span class="keyword">this</span>.openLoading = <span class="literal">false</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="验证登陆自动跳转"><a href="#验证登陆自动跳转" class="headerlink" title="验证登陆自动跳转"></a>验证登陆自动跳转</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">created()&#123;</span><br><span class="line">   <span class="keyword">if</span>(localStorage.userInfo)&#123;</span><br><span class="line">     Toast.success(<span class="string">'已经登陆'</span>)</span><br><span class="line">     <span class="keyword">this</span>.$router.push(<span class="string">'/'</span>)</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vue-js商城项目（六）登陆&quot;&gt;&lt;a href=&quot;#vue-js商城项目（六）登陆&quot; class=&quot;headerlink&quot; title=&quot;vue.js商城项目（六）登陆&quot;&gt;&lt;/a&gt;vue.js商城项目（六）登陆&lt;/h1&gt;&lt;h3 id=&quot;在User-js进行一个比较密码的函数封装&quot;&gt;&lt;a href=&quot;#在User-js进行一个比较密码的函数封装&quot; class=&quot;headerlink&quot; title=&quot;在User.js进行一个比较密码的函数封装&quot;&gt;&lt;/a&gt;在User.js进行一个比较密码的函数封装&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;userSchema.methods = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//密码比对的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        comparePassword: &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;_password, password&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bcrypt.compare(_password, password, (err, isMatch) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!err) resolve(isMatch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; reject(err)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>vue.js商城项目（五）加密</title>
    <link href="http://yoursite.com/2019/09/25/vue.js%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%BA%94%EF%BC%89%E5%8A%A0%E5%AF%86/"/>
    <id>http://yoursite.com/2019/09/25/vue.js商城项目（五）加密/</id>
    <published>2019-09-25T13:08:52.929Z</published>
    <updated>2019-10-15T10:38:25.106Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-js商城项目（五）加密"><a href="#vue-js商城项目（五）加密" class="headerlink" title="vue.js商城项目（五）加密"></a>vue.js商城项目（五）加密</h1><h3 id="加盐处理"><a href="#加盐处理" class="headerlink" title="加盐处理"></a>加盐处理</h3><p>把原来的密码里，加入一些其他的字符串，并且我们可以自己设置加入字符串的强度</p><h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><p>我们使用的MD5加密或者hash256加密算法，其实他们都是hash的算法。就是把你的密码进行一次不可逆的编译，这样就算别人得到了这个密码值，也不能进行直接登录操作</p><a id="more"></a><h3 id="安装与使用bcrypt"><a href="#安装与使用bcrypt" class="headerlink" title="安装与使用bcrypt"></a>安装与使用bcrypt</h3><p><code>npm i bcryptjs --save</code></p><p>安装bcryptjs  由js编写可以防止依赖错误，原生的有依赖visual stido ，python</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">userSchema.pre(<span class="string">'save'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">next</span>) </span>&#123;</span><br><span class="line">        bcrypt.genSalt(SALT_WORK_FACTOR, (err, salt) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) <span class="keyword">return</span> next(err)</span><br><span class="line">            bcrypt.hash(<span class="keyword">this</span>.passWord, salt, (err, hash) =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) <span class="keyword">return</span> next(err)</span><br><span class="line">                <span class="keyword">this</span>.passWord = hash</span><br><span class="line">                next()</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vue-js商城项目（五）加密&quot;&gt;&lt;a href=&quot;#vue-js商城项目（五）加密&quot; class=&quot;headerlink&quot; title=&quot;vue.js商城项目（五）加密&quot;&gt;&lt;/a&gt;vue.js商城项目（五）加密&lt;/h1&gt;&lt;h3 id=&quot;加盐处理&quot;&gt;&lt;a href=&quot;#加盐处理&quot; class=&quot;headerlink&quot; title=&quot;加盐处理&quot;&gt;&lt;/a&gt;加盐处理&lt;/h3&gt;&lt;p&gt;把原来的密码里，加入一些其他的字符串，并且我们可以自己设置加入字符串的强度&lt;/p&gt;&lt;h3 id=&quot;加密&quot;&gt;&lt;a href=&quot;#加密&quot; class=&quot;headerlink&quot; title=&quot;加密&quot;&gt;&lt;/a&gt;加密&lt;/h3&gt;&lt;p&gt;我们使用的MD5加密或者hash256加密算法，其实他们都是hash的算法。就是把你的密码进行一次不可逆的编译，这样就算别人得到了这个密码值，也不能进行直接登录操作&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>vue.js商城项目（四）(后台准备)</title>
    <link href="http://yoursite.com/2019/09/25/vue.js%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2019/09/25/vue.js商城项目（四）/</id>
    <published>2019-09-25T09:40:11.873Z</published>
    <updated>2019-10-15T11:51:37.574Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-js商城项目（四）-后台准备"><a href="#vue-js商城项目（四）-后台准备" class="headerlink" title="vue.js商城项目（四）(后台准备)"></a>vue.js商城项目（四）(后台准备)</h1><blockquote><p>Koa 是一个新的 web 框架，由 Express 幕后的原班人马打造， 致力于成为 web 应用和 API 开发领域中的一个更小、更富有表现力、更健壮的基石。 通过利用 async 函数，Koa 帮你丢弃回调函数，并有力地增强错误处理。 Koa 并没有捆绑任何中间件， 而是提供了一套优雅的方法，帮助您快速而愉快地编写服务端应用程序。</p></blockquote><a id="more"></a><h3 id="打开mongo数据库服务"><a href="#打开mongo数据库服务" class="headerlink" title="打开mongo数据库服务"></a>打开mongo数据库服务</h3><p><code>mongod -dbpath E:\mongodb\data\db</code></p><h3 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"><span class="keyword">const</span> db = <span class="string">"mongodb://localhost/shoppingMall"</span></span><br><span class="line"><span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">'glob'</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line">exports.initSchemas = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    glob.sync(resolve(__dirname, <span class="string">'./schema'</span>, <span class="string">'**/*.js'</span>)).forEach(<span class="built_in">require</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">exports.connect = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//连接</span></span><br><span class="line">    mongoose.connect(db, &#123; <span class="attr">useNewUrlParser</span>: <span class="literal">true</span> &#125;, &#123; <span class="attr">useUnifiedTopology</span>: <span class="literal">true</span> &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> maxConnectTimes = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//把所有连接放到这里</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//增加数据库监听事件</span></span><br><span class="line">        mongoose.connection.on(<span class="string">'disconnected'</span>, () =&gt; &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'***********数据库断开***********'</span>)</span><br><span class="line">            <span class="keyword">if</span> (maxConnectTimes &lt; <span class="number">3</span>) &#123;</span><br><span class="line">                maxConnectTimes++</span><br><span class="line">                mongoose.connect(db)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                reject()</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'数据库出现问题，程序无法搞定，请人为修理......'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        mongoose.connection.on(<span class="string">'error'</span>, err =&gt; &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'***********数据库错误***********'</span>)</span><br><span class="line">                <span class="keyword">if</span> (maxConnectTimes &lt; <span class="number">3</span>) &#123;</span><br><span class="line">                    maxConnectTimes++</span><br><span class="line">                    mongoose.connect(db)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    reject(err)</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'数据库出现问题，程序无法搞定，请人为修理......'</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">//链接打开的时</span></span><br><span class="line">        mongoose.connection.once(<span class="string">'open'</span>, () =&gt; &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'MongoDB connected successfully'</span>)</span><br><span class="line">            resolve()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定义schema"><a href="#定义schema" class="headerlink" title="定义schema"></a>定义schema</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"><span class="keyword">const</span> Schema = mongoose.Schema</span><br><span class="line"><span class="keyword">let</span> ObjectId = Schema.Types.ObjectId</span><br><span class="line">    <span class="comment">//创建schema</span></span><br><span class="line"><span class="keyword">const</span> userSchema = <span class="keyword">new</span> Schema(&#123;</span><br><span class="line">        UserId: ObjectId,</span><br><span class="line">        userName: &#123; <span class="attr">unique</span>: <span class="literal">true</span>, <span class="attr">type</span>: <span class="built_in">String</span> &#125;,</span><br><span class="line">        passWord: <span class="built_in">String</span>,</span><br><span class="line">        createAt: &#123; <span class="attr">type</span>: <span class="built_in">Date</span>, <span class="attr">default</span>: <span class="built_in">Date</span>.now() &#125;,</span><br><span class="line">        lastLoginAt: &#123; <span class="attr">type</span>: <span class="built_in">Date</span>, <span class="attr">default</span>: <span class="built_in">Date</span>.now() &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//发布模型</span></span><br><span class="line">mongoose.model(<span class="string">'User'</span>, userSchema)</span><br></pre></td></tr></table></figure><h3 id="测试插入，查询"><a href="#测试插入，查询" class="headerlink" title="测试插入，查询"></a>测试插入，查询</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Koa()</span><br><span class="line"><span class="keyword">const</span> &#123; connect, initSchemas &#125; = <span class="built_in">require</span>(<span class="string">'./database/init.js'</span>)</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>);</span><br><span class="line">(<span class="keyword">async</span>() =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> connect()</span><br><span class="line">    initSchemas()</span><br><span class="line">    <span class="keyword">const</span> User = mongoose.model(<span class="string">'User'</span>)</span><br><span class="line">    <span class="keyword">let</span> oneUser = <span class="keyword">new</span> User(&#123; <span class="attr">userName</span>: <span class="string">'jason'</span>, <span class="attr">passWord</span>: <span class="string">'123456'</span> &#125;)</span><br><span class="line">    oneUser.save().then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'插入成功'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> users = <span class="keyword">await</span> User.findOne(&#123;&#125;).exec()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'------------------'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(users)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'------------------'</span>)</span><br><span class="line">&#125;)()</span><br><span class="line">app.use(<span class="keyword">async</span>(ctx) =&gt; &#123;</span><br><span class="line">    ctx.body = <span class="string">'&lt;h1&gt;hello koa&lt;/h1&gt;'</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'[Server] starting port 3000'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>这些都是基本设置，之前学过</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vue-js商城项目（四）-后台准备&quot;&gt;&lt;a href=&quot;#vue-js商城项目（四）-后台准备&quot; class=&quot;headerlink&quot; title=&quot;vue.js商城项目（四）(后台准备)&quot;&gt;&lt;/a&gt;vue.js商城项目（四）(后台准备)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Koa 是一个新的 web 框架，由 Express 幕后的原班人马打造， 致力于成为 web 应用和 API 开发领域中的一个更小、更富有表现力、更健壮的基石。 通过利用 async 函数，Koa 帮你丢弃回调函数，并有力地增强错误处理。 Koa 并没有捆绑任何中间件， 而是提供了一套优雅的方法，帮助您快速而愉快地编写服务端应用程序。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>vue.js商城项目（三）</title>
    <link href="http://yoursite.com/2019/09/22/vue.js%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2019/09/22/vue.js商城项目（三）/</id>
    <published>2019-09-22T02:42:12.676Z</published>
    <updated>2019-10-15T10:39:17.977Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-js商城项目（三）"><a href="#vue-js商城项目（三）" class="headerlink" title="vue.js商城项目（三）"></a>vue.js商城项目（三）</h1><h3 id="（filter）精度价格"><a href="#（filter）精度价格" class="headerlink" title="（filter）精度价格"></a>（filter）精度价格</h3><blockquote><p>在很多电商项目中，有许多价格标签需要精确到小数点后两位。</p></blockquote><p><strong>创建一个js文件</strong></p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">toMoney</span>(<span class="params">money = <span class="number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> money.toFixed(<span class="number">2</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>精确到小数点后两位</p><p><strong>在需要的文件引入</strong></p><p><code>import {toMoney} from &quot;@/filter/moneyFilter.js&quot;</code></p><p>script中写filter方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">filters:&#123;</span><br><span class="line"></span><br><span class="line">    moneyFilter(money)&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> toMoney(money)</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>$&#123;&#123;item.price | moneyFilter&#125;&#125;($&#123;&#123;item.mallPrice | moneyFilter&#125;&#125;)<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1568899469165.png" alt="1568982154665"></p><hr><h3 id="分离URL"><a href="#分离URL" class="headerlink" title="分离URL"></a>分离URL</h3><p><strong>创立一个独立的配置文件，当域名需要修改的时候，只需修改一次</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> BASEURL = <span class="string">"http://localhost:3001/"</span></span><br><span class="line"><span class="keyword">const</span> URL = &#123;</span><br><span class="line">    getShoppingMallInfo: BASEURL + <span class="string">'data'</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = URL</span><br></pre></td></tr></table></figure><p>在需要的组件中引入</p><p><code>import url from &quot;@/serviceAPI.config.js&quot;</code></p><p>在axios中直接获取暴露的url</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    axios(&#123;</span><br><span class="line"></span><br><span class="line">​      url: url.getShoppingMallInfo,</span><br><span class="line"></span><br><span class="line">​      method: <span class="string">"get"</span></span><br><span class="line"></span><br><span class="line">​    &#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vue-js商城项目（三）&quot;&gt;&lt;a href=&quot;#vue-js商城项目（三）&quot; class=&quot;headerlink&quot; title=&quot;vue.js商城项目（三）&quot;&gt;&lt;/a&gt;vue.js商城项目（三）&lt;/h1&gt;&lt;h3 id=&quot;（filter）精度价格&quot;&gt;&lt;a href=&quot;#（filter）精度价格&quot; class=&quot;headerlink&quot; title=&quot;（filter）精度价格&quot;&gt;&lt;/a&gt;（filter）精度价格&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;在很多电商项目中，有许多价格标签需要精确到小数点后两位。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;创建一个js文件&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>vue.js商城项目（二）（楼层导航）</title>
    <link href="http://yoursite.com/2019/09/19/vue.js%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2019/09/19/vue.js商城项目（二）/</id>
    <published>2019-09-19T07:41:10.958Z</published>
    <updated>2019-10-15T10:41:20.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-js商城项目（二）（楼层导航）"><a href="#vue-js商城项目（二）（楼层导航）" class="headerlink" title="vue.js商城项目（二）（楼层导航）"></a>vue.js商城项目（二）（楼层导航）</h1><blockquote><p>轮播图在上个笔记讲了，可以用vant内置轮播图组件也可以用swiper组件,组件化形式写一个楼层推荐</p></blockquote><a id="more"></a><h3 id="首页布局"><a href="#首页布局" class="headerlink" title="首页布局"></a>首页布局</h3><p><strong>先看效果图，大概就是这样</strong></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1568898689120.png" alt="1568898689120"></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1568898707521.png" alt="1568898707521"></p><p>index.js引入路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ShoppingMall <span class="keyword">from</span> <span class="string">'@/components/pages/ShoppingMall'</span></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">    routes: [&#123;</span><br><span class="line">        path: <span class="string">'/'</span>,</span><br><span class="line">        name: <span class="string">'ShoppingMall'</span>,</span><br><span class="line">        component: ShoppingMall</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><h3 id="jsonServer模块模拟json数据"><a href="#jsonServer模块模拟json数据" class="headerlink" title="jsonServer模块模拟json数据"></a>jsonServer模块模拟json数据</h3><p>（1）安装</p><blockquote><p>$ npm install -g json-server</p></blockquote><p>（2）使用</p><ul><li><p>创建json文件db.json，把需要的数据写进来</p></li><li><p><img src="/images/loading.png" data-original="E:%5CBlog%5Cpicture%5C1568899075948.png" alt="1568899075948"></p></li><li><p>使用全局json-server命令，启动mock服务。这个mock服务，管理的数据，就是db.json。</p><blockquote><p>$ json-server –watch –port 3001 db.json</p></blockquote></li></ul><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1568898999140.png" alt="1568898999140"></p><h3 id="使用axios获取数据"><a href="#使用axios获取数据" class="headerlink" title="使用axios获取数据"></a>使用axios获取数据</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">     url: <span class="string">"http://localhost:3001/data"</span>,</span><br><span class="line">     method: <span class="string">"get"</span></span><br><span class="line">   &#125;)</span><br><span class="line">     .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">       <span class="built_in">console</span>.log(response);</span><br><span class="line">       <span class="keyword">if</span> (response.status === <span class="number">200</span>) &#123;</span><br><span class="line">         <span class="keyword">this</span>.category = response.data.category;</span><br><span class="line">         <span class="keyword">this</span>.advertesPicture = response.data.advertesPicture.PICTURE_ADDRESS;</span><br><span class="line">         <span class="keyword">this</span>.recommendGoods = response.data.recommend;</span><br><span class="line">         <span class="keyword">this</span>.floorName = response.data.floorName</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> <span class="keyword">this</span>.floorName)&#123;</span><br><span class="line">           <span class="keyword">this</span>.floorContent[key] = response.data[key]</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;)</span><br><span class="line">     .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">       <span class="built_in">console</span>.log(error)</span><br><span class="line">     &#125;)</span><br></pre></td></tr></table></figure><p>视频老师给的json数据，获取各种信息</p><h3 id="楼层组件化"><a href="#楼层组件化" class="headerlink" title="楼层组件化"></a>楼层组件化</h3><p><strong>父组件遍历</strong></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1568899469165.png" alt="1568899469165"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 楼层 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in floorName"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">floorComponent</span> <span class="attr">:floorData</span>=<span class="string">"floorContent[index]"</span> <span class="attr">:floorTitle</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">floorComponent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用<code>v-for</code>遍历这样json数据添加任意个楼层任意个数据都能遍历</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.floorName = response.data.floorName</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> <span class="keyword">this</span>.floorName)&#123;</span><br><span class="line">  <span class="keyword">this</span>.floorContent[key] = response.data[key]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先取到楼层名对象，然后遍历，</p><p><code>response.data[key]</code>用变量取对象的值必须使用方括号[变量]</p><p><strong>通过props传递给子组件</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"floor-rule"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"floorData0.image"</span> <span class="attr">width</span>=<span class="string">"100%"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in floorData.slice(1)"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"item.image"</span> <span class="attr">width</span>=<span class="string">"100%"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第一个图片最大拎出来，然后再遍历<code>.slice(1)</code>截取第一个以后的对象</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vue-js商城项目（二）（楼层导航）&quot;&gt;&lt;a href=&quot;#vue-js商城项目（二）（楼层导航）&quot; class=&quot;headerlink&quot; title=&quot;vue.js商城项目（二）（楼层导航）&quot;&gt;&lt;/a&gt;vue.js商城项目（二）（楼层导航）&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;轮播图在上个笔记讲了，可以用vant内置轮播图组件也可以用swiper组件,组件化形式写一个楼层推荐&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>swiper组件使用</title>
    <link href="http://yoursite.com/2019/09/18/swiper%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/09/18/swiper组件使用/</id>
    <published>2019-09-18T12:59:58.851Z</published>
    <updated>2019-10-15T09:59:13.519Z</updated>
    
    <content type="html"><![CDATA[<h1 id="swiper组件使用"><a href="#swiper组件使用" class="headerlink" title="swiper组件使用"></a>swiper组件使用</h1><hr><h3 id="引入-vue-awesome-swiper-的两种方式"><a href="#引入-vue-awesome-swiper-的两种方式" class="headerlink" title="引入 vue-awesome-swiper 的两种方式"></a>引入 vue-awesome-swiper 的两种方式</h3><ul><li>全局引入</li></ul><p>可以直接使用全局引入，引入代码如下：</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueAwesomeSwiper <span class="keyword">from</span> <span class="string">'vue-awesome-swiper'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// require styles</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'swiper/dist/css/swiper.css'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueAwesomeSwiper, <span class="comment">/* &#123; default global options &#125; */</span>)</span><br></pre></td></tr></table></figure><ul><li>以组件形式引入</li></ul><p>这种方式是在需要的页面以<code>component</code> 的形式引入，好处就是依赖性不强。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'swiper/dist/css/swiper.css'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; swiper, swiperSlide &#125; <span class="keyword">from</span> <span class="string">'vue-awesome-swiper'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    swiper,</span><br><span class="line">    swiperSlide</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="一个简单的轮播图"><a href="#一个简单的轮播图" class="headerlink" title="一个简单的轮播图"></a>一个简单的轮播图</h3><p>新建一个<code>swiperDefault.vue</code>文件。写入如下代码:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;swiper :options=<span class="string">"swiperOption"</span>&gt;</span><br><span class="line">      &lt;swiper-slide <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-slide"</span> v-<span class="keyword">for</span>=<span class="string">"(item, index) in slide"</span> :key=<span class="string">"index"</span>&gt;</span><br><span class="line">          Slide &#123;&#123;item&#125;&#125;</span><br><span class="line">      &lt;<span class="regexp">/swiper-slide&gt;</span></span><br><span class="line"><span class="regexp">      &lt;div class="swiper-pagination" slot="pagination"&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/swiper&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import "vue-awesome-swiper/</span>node_modules/swiper/dist/css/swiper.css<span class="string">"</span></span><br><span class="line"><span class="string">import &#123; swiper, swiperSlide &#125; from "</span>vue-awesome-swiper<span class="string">";</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  data() &#123;</span></span><br><span class="line"><span class="string">    return &#123;</span></span><br><span class="line"><span class="string">      slide: [1, 2, 3, 4, 5, 6],</span></span><br><span class="line"><span class="string">      swiperOption:&#123;</span></span><br><span class="line"><span class="string">        swiperOption:&#123;</span></span><br><span class="line"><span class="string">        // 滑动最后页进入第一页</span></span><br><span class="line"><span class="string">        loop:true,</span></span><br><span class="line"><span class="string">          pagination:&#123;</span></span><br><span class="line"><span class="string">              el:'.swiper-pagination',</span></span><br><span class="line"><span class="string">              // 可以点击</span></span><br><span class="line"><span class="string">              clickable:true</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  components: &#123; swiper, swiperSlide &#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;style scoped&gt;</span></span><br><span class="line"><span class="string">.swiper-slide &#123;</span></span><br><span class="line"><span class="string">  height: 4rem;</span></span><br><span class="line"><span class="string">  text-align: center;</span></span><br><span class="line"><span class="string">  padding-top: 3rem;</span></span><br><span class="line"><span class="string">  border-bottom: 1px solid #ccc;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure><p>代码写好后，在<code>.vue</code>文件里进行引入使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> swiperDefault <span class="keyword">from</span> <span class="string">'../swiper/swiperDefault'</span></span><br></pre></td></tr></table></figure><p>然后注册组件,其实上节课的代码也是可以封装成一个component的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">components:&#123;swiper,swiperSlide,swiperDefault&#125;,</span><br></pre></td></tr></table></figure><p>注册好后，直接在<code>template</code>里使用就可以了.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;swiperDefault&gt;&lt;/swiperDefault&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="E:%5CBlog%5Cpicture%5C1568809332660.png" alt="1568809332660"></p><h4 id="竖屏切换效果"><a href="#竖屏切换效果" class="headerlink" title="竖屏切换效果"></a>竖屏切换效果</h4><p>在配置项里直接配置<code>direction</code>就可以了，配置竖屏代码如下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swiperOption:&#123;</span><br><span class="line">    direction:<span class="string">'vertical'</span>,</span><br></pre></td></tr></table></figure><h3 id="区域滚动效果"><a href="#区域滚动效果" class="headerlink" title="区域滚动效果"></a>区域滚动效果</h3><p>加入上划下拉的组件，在一定区域内局部可以滚动，如文章，或者广告</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;swiper <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper"</span> :options=<span class="string">"swiperOption"</span>&gt;</span><br><span class="line">            &lt;swiper-slide <span class="class"><span class="keyword">class</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">                &lt;div&gt;大段文章...&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>swiper-slide&gt;</span><br><span class="line">        &lt;<span class="regexp">/swiper&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import "vue-awesome-swiper/</span>node_modules/swiper/dist/css/swiper.css<span class="string">"</span></span><br><span class="line"><span class="string">import &#123; swiper, swiperSlide &#125; from "</span>vue-awesome-swiper<span class="string">";</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  data() &#123;</span></span><br><span class="line"><span class="string">    return &#123;</span></span><br><span class="line"><span class="string">      swiperOption:&#123;</span></span><br><span class="line"><span class="string">            // 竖屏滚动</span></span><br><span class="line"><span class="string">            direction:'vertical',</span></span><br><span class="line"><span class="string">            // 一屏之内swiperslide数量</span></span><br><span class="line"><span class="string">            slidesPerView: 'auto',</span></span><br><span class="line"><span class="string">            // 滑动不自动贴合</span></span><br><span class="line"><span class="string">            freeMode: true,</span></span><br><span class="line"><span class="string">            // 鼠标滚轮控制</span></span><br><span class="line"><span class="string">            mousewheel:true</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  components: &#123; swiper, swiperSlide &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;style scoped&gt;</span></span><br><span class="line"><span class="string">.swiper&#123;</span></span><br><span class="line"><span class="string">    height: 300px;</span></span><br><span class="line"><span class="string">    overflow: hidden;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.text&#123;</span></span><br><span class="line"><span class="string">    font-size:18px;</span></span><br><span class="line"><span class="string">    text-align: left;</span></span><br><span class="line"><span class="string">    padding: 30px;</span></span><br><span class="line"><span class="string">    height: auto;</span></span><br><span class="line"><span class="string">    box-sizing: border-box;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure><p><strong>更多效果请访问swiper 官方API，手写原生js轮播图请看我的淘宝静态首页项目</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;swiper组件使用&quot;&gt;&lt;a href=&quot;#swiper组件使用&quot; class=&quot;headerlink&quot; title=&quot;swiper组件使用&quot;&gt;&lt;/a&gt;swiper组件使用&lt;/h1&gt;&lt;hr&gt;&lt;h3 id=&quot;引入-vue-awesome-swiper-的两种方式&quot;&gt;&lt;a href=&quot;#引入-vue-awesome-swiper-的两种方式&quot; class=&quot;headerlink&quot; title=&quot;引入 vue-awesome-swiper 的两种方式&quot;&gt;&lt;/a&gt;引入 vue-awesome-swiper 的两种方式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;全局引入&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;可以直接使用全局引入，引入代码如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue, 前端" scheme="http://yoursite.com/categories/vue-%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="组件" scheme="http://yoursite.com/tags/%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>vue.js商城项目（一）（前期准备）</title>
    <link href="http://yoursite.com/2019/09/15/vue.js%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%EF%BC%88%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87%EF%BC%89/"/>
    <id>http://yoursite.com/2019/09/15/vue.js商城项目（前期准备）/</id>
    <published>2019-09-15T09:14:19.010Z</published>
    <updated>2019-10-15T10:42:07.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-js商城项目（一）（前期准备）"><a href="#vue-js商城项目（一）（前期准备）" class="headerlink" title="vue.js商城项目（一）（前期准备）"></a>vue.js商城项目（一）（前期准备）</h1><blockquote><p>vue 的基础知识也学习完了，跟着视频教程做了几个小demo，想结合之前学过的node，做一个综合性的商城项目</p></blockquote><a id="more"></a><h3 id="前端开发环境搭建"><a href="#前端开发环境搭建" class="headerlink" title="前端开发环境搭建"></a>前端开发环境搭建</h3><p><strong><em>1.使用vue-cli生成项目目录</em></strong> </p><p>打开<code>VScode</code>创建文件夹</p><ul><li>全局安装vue-cli，在终端里输入，<code>npm install vue-cli -g</code>全局安装</li><li>在终端中输入 <code>vue install</code>，引入依赖模块</li><li>在终端中输入 <code>vue init webpack</code></li></ul><p><img src="/images/loading.png" data-original="E:%5CBlog%5Cpicture%5C1568534019828.png" alt="1568534019828"></p><p>国内网络不行请使用国内镜像<code>cmpn</code></p><p><strong><em>2.测试环境是否安装成功</em></strong></p><ul><li>使用<code>npm run dev</code> 进行测试环境的打开。</li><li>在浏览器中输入 <code>http://localhost:8080</code> 进行测试。</li></ul><p><strong>成功页</strong></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/vue_shopping/1568534068722.png" alt="1568534068722"></p><hr><h3 id="引入Vant组件库"><a href="#引入Vant组件库" class="headerlink" title="引入Vant组件库"></a>引入Vant组件库</h3><p>vant是有赞前端团队提供的Vue组件库。</p><p>终端输入<code>cnpm i vant -S</code>安装</p><p>没有cnpm 直接使用淘宝源<code>npm install 项目名 --save --registry=https://registry.npm.taobao.org</code></p><p><a href="https://github.com/ant-design/babel-plugin-import" target="_blank" rel="noopener">babel-plugin-import</a> 是一款 babel 插件，它会在编译过程中将 import 的写法自动转换为按需引入的方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">npm i babel-plugin-import -D</span><br><span class="line">// 在.babelrc 中添加配置</span><br><span class="line">// 注意：webpack 1 无需设置 libraryDirectory</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"plugins"</span>: [</span><br><span class="line">    [<span class="string">"import"</span>, &#123;</span><br><span class="line">      <span class="string">"libraryName"</span>: <span class="string">"vant"</span>,</span><br><span class="line">      <span class="string">"libraryDirectory"</span>: <span class="string">"es"</span>,</span><br><span class="line">      <span class="string">"style"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 对于使用 babel7 的用户，可以在 babel.config.js 中配置</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    [<span class="string">'import'</span>, &#123;</span><br><span class="line">      libraryName: <span class="string">'vant'</span>,</span><br><span class="line">      libraryDirectory: <span class="string">'es'</span>,</span><br><span class="line">      style: <span class="literal">true</span></span><br><span class="line">    &#125;, <span class="string">'vant'</span>]</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line">// 接着你可以在代码中直接引入 Vant 组件</span><br><span class="line">// 插件会自动将代码转化为方式二中的按需引入形式</span><br><span class="line">import &#123; Button &#125; from <span class="string">'vant'</span>;</span><br></pre></td></tr></table></figure><hr><h3 id="移动端适配"><a href="#移动端适配" class="headerlink" title="移动端适配"></a>移动端适配</h3><p><code>rem</code>（font size of the root element）是相对长度单位。相对于<strong>根元素</strong>（即html元素）<code>font-size</code><strong>字体大小</strong>计算值的倍数。<strong>em相对于父元素，rem相对于根元素</strong></p><p>使用js适配，主流移动端web适配方案</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//得到手机屏幕的宽度</span></span><br><span class="line"><span class="keyword">let</span> htmlWidth = <span class="built_in">document</span>.documentElement.clientWidth || <span class="built_in">document</span>.body.clientWidth;</span><br><span class="line"><span class="comment">//得到html的Dom元素</span></span><br><span class="line"><span class="keyword">let</span> htmlDom = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'html'</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//设置根元素字体大小,iphone678屏幕宽度375px标准375/16</span></span><br><span class="line">htmlDom.style.fontSize = htmlWidth / <span class="number">23.4375</span> + <span class="string">'px'</span>;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vue-js商城项目（一）（前期准备）&quot;&gt;&lt;a href=&quot;#vue-js商城项目（一）（前期准备）&quot; class=&quot;headerlink&quot; title=&quot;vue.js商城项目（一）（前期准备）&quot;&gt;&lt;/a&gt;vue.js商城项目（一）（前期准备）&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;vue 的基础知识也学习完了，跟着视频教程做了几个小demo，想结合之前学过的node，做一个综合性的商城项目&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>初识KOA（上）</title>
    <link href="http://yoursite.com/2019/08/07/2019-8-6%20%E5%88%9D%E8%AF%86KOA/"/>
    <id>http://yoursite.com/2019/08/07/2019-8-6 初识KOA/</id>
    <published>2019-08-07T13:46:12.663Z</published>
    <updated>2019-08-08T02:20:26.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初识KOA（上）"><a href="#初识KOA（上）" class="headerlink" title="初识KOA（上）"></a>初识KOA（上）</h1><blockquote><p>新一代node框架入门，前置知识：node基础,数据库基础，了解Koa怎么搭建服务器的,不适合通读，<strong>推荐跟文章实际操作</strong>（手把手教学）</p></blockquote><a id="more"></a><p>如果有<strong>知识点</strong>未知请看：</p><p><a href="https://ejs.bootcss.com/" target="_blank" rel="noopener">ejs</a><br><a href="https://koa.bootcss.com/" target="_blank" rel="noopener">koa文档</a><br><a href="https://juejin.im/post/5c0397186fb9a049b5068e54" target="_blank" rel="noopener">前端er，你真的会用 async 吗？</a><br><a href="https://juejin.im/post/5d116ae5518825328779c9d5" target="_blank" rel="noopener">async/await 应知应会</a><br><a href="https://juejin.im/post/5b9db6925188255c3b7d78cb" target="_blank" rel="noopener">如何避开 async/await 地狱</a></p><p>之前对JS异步,这一块有点生疏，多看点博客</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Koa 是一个新的 web 框架，由 Express 幕后的原班人马打造， 致力于成为 web 应用和 API 开发领域中的一个更小、更富有表现力、更健壮的基石。 通过利用 async 函数，Koa 帮你丢弃回调函数，并有力地增强错误处理。 Koa 并没有捆绑任何中间件， 而是提供了一套优雅的方法，帮助您快速而愉快地编写服务端应用程序。</p><p><strong>1.新建文件夹</strong></p><p>初始化package.json，终端输入</p><p><code>npm init --yes</code></p><p><strong>2.下载KOA</strong></p><p>终端输入<code>cnpm install koa</code></p><p>当前文件夹下会出来node_moudules，模块依赖包</p><p><strong>3.安装nodemon</strong></p><p>它会监测项目中的所有文件，一旦发现文件有改动，Nodemon 会自动重启应用</p><p><code>cnpm install nodemon -D</code> -g 安装全局</p><p><strong>4.在package.json中配置nodemon</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">      "start": "nodemon app.js"</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>5.在文件夹中新建文件<code>app.js</code></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Koa()</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; <span class="built_in">console</span>.log(<span class="string">'Server started...'</span>))</span><br></pre></td></tr></table></figure><p><strong>6.终端输入<code>nodemon app.js</code>测试启动</strong></p><p>搭建服务器成功</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/1565091025993.png" alt="1565091025993"></p><p><strong>7.测试导入一个koa 模块 <code>koa-json</code></strong></p><p>终端下载<code>cnpm install koa-json</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>)</span><br><span class="line"><span class="keyword">const</span> json = <span class="built_in">require</span>(<span class="string">'koa-json'</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Koa()</span><br><span class="line"></span><br><span class="line">app.use(json())</span><br><span class="line">app.use(<span class="keyword">async</span> ctx =&gt; (ctx.body = &#123; <span class="attr">msg</span>: <span class="string">'Hello world!'</span> &#125;))</span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; <span class="built_in">console</span>.log(<span class="string">'Server started...'</span>))</span><br></pre></td></tr></table></figure><p>在浏览器查看，出现json</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/1565097503676.png" alt="1565097503676"></p><p><strong>8. <code>app.context</code></strong></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/1565097690435.png" alt="1565097690435"></p><p><strong>9.路由模块 Koa-router</strong></p><p>终端输入<code>cnpm install koa-router</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">//引入模块，实例化</span></span><br><span class="line"><span class="keyword">const</span> KoaRouter = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)</span><br><span class="line">   <span class="keyword">const</span> router = <span class="keyword">new</span> KoaRouter()</span><br><span class="line">   router.get(<span class="string">'/test'</span>, ctx =&gt; (ctx.body = <span class="string">'hello Router!'</span>))</span><br><span class="line">       <span class="comment">//配置路由模块</span></span><br><span class="line">   app.use(router.routes()).use(router.allowedMethods())</span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/1565098676663.png" alt="1565098676663"></p><p><strong>10.如果引入HTML的话，需要模板引擎ejs</strong></p><p>终端输入<code>cnpm install koa-ejs</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> render = <span class="built_in">require</span>(<span class="string">'koa-ejs'</span>)</span><br><span class="line"><span class="comment">//配置模板引擎</span></span><br><span class="line">render(app, &#123;</span><br><span class="line">    <span class="comment">//当前路径的views文件夹</span></span><br><span class="line">    root: path.join(__dirname, <span class="string">'views'</span>),</span><br><span class="line">    layout: <span class="string">'layout'</span>,</span><br><span class="line">    viewExt: <span class="string">'html'</span>,</span><br><span class="line">    cache: <span class="literal">false</span>,</span><br><span class="line">    debug: <span class="literal">false</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//路由跳转</span></span><br><span class="line">router.get(<span class="string">'/'</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'index'</span>, &#123;</span><br><span class="line">        title: <span class="string">'I love node'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//layout.html</span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">body</span> %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//index.html</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">title</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/1565101335597.png" alt="1565101335597"></p><p><strong>11.数据传递和渲染</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模拟数据</span></span><br><span class="line"><span class="keyword">const</span> things = [&#123;<span class="attr">name</span>:<span class="string">'friends'</span>&#125;, &#123;<span class="attr">name</span>:<span class="string">'family'</span>&#125;]</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/'</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'index'</span>, &#123;</span><br><span class="line">        title: <span class="string">'I love node'</span>,</span><br><span class="line">        things: things</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">title</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">things.forEach</span>(<span class="attr">thing</span> =&gt;</span>&#123; %&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%=</span> <span class="attr">thing</span> %&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> &#125;) %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/1565161017644.png" alt="1565161017644"></p><p><strong>12.导航和添加内容</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">router.get(<span class="string">'/add'</span>, showAdd)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">showAdd</span>(<span class="params">ctx</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'add'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建文件夹<code>partials</code>navBar.html</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/1565184485779.png" alt="1565184485779"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//add</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"display-4 mb-4"</span>&gt;</span></span><br><span class="line">    添加</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/add"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"thing"</span> <span class="attr">class</span>=<span class="string">"form-control form-control-lg"</span> <span class="attr">placeholder</span>=<span class="string">"随便。。。"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"添加"</span> <span class="attr">class</span>=<span class="string">"btn btn-dark btn-lg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-lg"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//navBar</span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-expand-lg navbar-light bg-light mb-4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Jason`s App<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"navbar-toggler"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#navbarSupportedContent"</span> <span class="attr">aria-controls</span>=<span class="string">"navbarSupportedContent"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">aria-label</span>=<span class="string">"Toggle navigation"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"navbar-toggler-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapse navbar-collapse"</span> <span class="attr">id</span>=<span class="string">"navbarSupportedContent"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"navbar-nav ml-auto"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"/add"</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在<code>layout.html</code>body中引入</p><p><code>&lt;% include partials/navBar.html %&gt;</code></p><p>最终效果</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/1565184216539.png" alt="1565184216539"></p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这篇刚好入门，下一步将要解决如何完善功能和路由参数，本地服务器与刚学的MongoDB，创建测试接口等</p><p>由于不是写网页内容，侧重了解node后端就引用了Bootstrap的CSS样式</p><p>还会有下一篇文章，等我先学一下下，新手入门，高手轻喷。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;初识KOA（上）&quot;&gt;&lt;a href=&quot;#初识KOA（上）&quot; class=&quot;headerlink&quot; title=&quot;初识KOA（上）&quot;&gt;&lt;/a&gt;初识KOA（上）&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;新一代node框架入门，前置知识：node基础,数据库基础，了解Koa怎么搭建服务器的,不适合通读，&lt;strong&gt;推荐跟文章实际操作&lt;/strong&gt;（手把手教学）&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="node, koa" scheme="http://yoursite.com/categories/node-koa/"/>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
      <category term="koa" scheme="http://yoursite.com/tags/koa/"/>
    
      <category term="后端" scheme="http://yoursite.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>初识MongoDB</title>
    <link href="http://yoursite.com/2019/08/06/MongoDB/"/>
    <id>http://yoursite.com/2019/08/06/MongoDB/</id>
    <published>2019-08-06T01:46:04.431Z</published>
    <updated>2019-08-12T02:08:52.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><ul><li><p>一个数据库对应多个集合</p><ul><li>一个集合对应多个文档对象</li><li>在mongo中不论是db还是集合，你都无需去创建他</li><li>直接就当他已经存在，直接Use来使用</li><li><strong>把文档比喻成数据库的一行，一个集合相当于一张表</strong><ul><li>use db名称;<ul><li>接着会被切换到该db中</li></ul></li><li><code>db.要创建的集合名称.save({})</code>;这样集合就被创建了</li></ul></li></ul></li><li><p><strong>解决32位异常</strong><br>mongod –dbpath=”路径” –journal –storageEngine=mmapv1</p></li></ul><a id="more"></a><ul><li><p>1:启动服务器</p><ul><li><code>mongod --dbpath &quot;e:/mongodb/data/db&quot;</code> // 目录一定要存在自己创建随便名称‘<ul><li>尽量设置在非系统盘 <code>C盘生成目录是需要权限的</code></li></ul></li><li>如果看到<code>waiting for connections on port 27017</code>说明服务已经启动</li></ul></li><li><p>客户端连接服务器<strong>另开一个命令行</strong></p><ul><li><code>mongo</code> 默认连接的是test数据库</li></ul></li><li><p>查询有哪些数据库  </p><ul><li>查询数据库：<code>show dbs;</code></li><li>切换数据库: <code>use 数据库名;</code></li></ul></li><li><p>查询当前db下有哪些集合</p><ul><li><code>show collections;</code></li></ul></li><li><p>查询数据：</p><ul><li><code>db.集合名.find();</code>  //查询出来的是文档对象 document<ul><li><code>db.users.find();</code>    </li><li>查询名字为sun的，<code>db.users.find({name:&quot;sun&quot;});</code>    </li><li>查询集合中文档数量<code>db.users.find().count()</code>    </li><li><code>db.users.find({num:{$lte:10}}.skip(10).limit(10))</code>小于等于10,跳过十条，查10条</li><li>lt=less than,    ​gt=great than</li><li>查询小于1000 或大于2000的员工，db.empty.find({$or:[sal:{$lt:1000},{sal:{$gt:gt:2000}}]})</li><li><code>db.users.find().sort({id:1，name:1})</code>1表示升序-1表示降序，先比ID，如果一样比名字</li><li><code>db.users.find({},{name:1})</code>只显示名字，可以列出想想显示字段</li></ul></li></ul></li><li><p>插入数据：    <code>db.collection.insert({contry:&#39;中国&#39;,name:&#39;小明&#39;,score:77})</code></p><ul><li>插入多条用数组<code>db.student.insert([{name:&quot;bajie&quot;,age:23},{name:&quot;shaheshang&quot;,age:66},])</code></li></ul></li><li><p>添加数据:</p><ul><li><p><code>db.集合名.save(对象)</code> //mongo默认会给我们加入_id作为该文档对象的唯一标识</p></li><li><p><code>db.users.save({contry:&#39;中国&#39;,name:&#39;小明&#39;,score:77});</code></p></li><li><p><code>db.users.update({name:&#39;小明&#39;},{$push:{contry:&#39;印度&#39;})</code></p></li><li><p><code>db.users.update({name:&#39;小明&#39;},{$addToSet:{contry:&#39;印度&#39;})</code>如果重复不会添加</p></li></ul></li></ul><ul><li><p>删除数据:</p><ul><li><code>db.集合名.remove(条件对象);</code>//条件匹配就会被全部删除</li><li><code>db.users.remove({name:&#39;小明&#39;}，true);</code>只会删除第一个匹配</li><li>如果给定一个空对像，会匹配全部<code>db.集合名.remove({})</code>=这个性能更好<code>db.collection.drop()</code></li><li><code>db.dropDatabase</code>删库</li></ul></li><li><p>更新数据:<strong>默认情况下只修改一个</strong></p><ul><li><p><code>db.集合名.update({匹配条件对象},{$set:{修改后的对象}})</code></p></li><li><p><code>db.users.update({name:&#39;小明&#39;},{$set:{contry:&#39;印度&#39;}})</code></p></li><li><p>修改多个</p><p>  <code>db.users.updateMany</code></p><p>  <code>db.users.update({name:&#39;小明&#39;},{$set:{contry:&#39;印度&#39;}}，{multi:true})</code>设置属性</p><p>  ​                                                                     $inc​增加</p></li></ul></li></ul><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">练习：</span><br><span class="line"> 查询姓名为小明的学生</span><br><span class="line">       db.users.find(&#123;name:&apos;小明&apos;&#125;);;   查询英语成绩大于90分的同学</span><br><span class="line">       db.users.find(&#123;score:&#123;$gt:90&#125;&#125;); //查找成绩大于90分$gt</span><br><span class="line">       //$lt小于</span><br><span class="line">查询数学成绩不等于88的同学</span><br><span class="line">       db.users.find(&#123;score:&#123;$ne:88&#125;&#125;);   查询总分大于200分的所有同学</span><br><span class="line">       db.users.find(&#123;score:&#123;$gt:200&#125;&#125;);</span><br></pre></td></tr></table></figure><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><ul><li><code>db.users.find().skip(3).limit(3);</code></li><li>db.集合名称.find().跳到3.显示3条<pre><code>+ limit 0,3</code></pre></li></ul><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><ul><li><code>db.users.find().sort({key:排序方式});</code></li><li><code>db.users.find().sort({&#39;score&#39;:1});</code> //正数代表升序，负数代表降序</li></ul><h4 id="模糊匹配"><a href="#模糊匹配" class="headerlink" title="模糊匹配"></a>模糊匹配</h4><ul><li><code>db.users.find({name:{$regex:&#39;小&#39;}});</code></li><li><code>db.users.find({name:{$regex:&#39;明&#39;}});</code></li></ul><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><ul><li>需要求当前集合的记录数：</li><li><code>db.users.find().count();</code></li><li>求最大值<br>-求整个集合的总成绩<pre><code>+ db.集合名.聚合({ 组的划分规则{_id:&apos;1&apos;,显示内容:{$sum:&apos;$score&apos;}} })</code></pre><ul><li>求所有人的平均分<ul><li><code>db.users.aggregate({$group:{_id:&#39;1&#39;,sumscore:{$avg:&#39;$score&#39; } }});</code></li></ul></li><li>求按国家分组，求所有国家的总分<ul><li><code>db.users.aggregate({$group:{_id:&#39;$contry&#39;,sumScore:{$sum:&#39;$score&#39;}}});</code></li></ul></li></ul></li><li>添加基础数据:<br>db.users.save({contry:’中国’,name:’小明’,score:77});<br>db.users.save({contry:’中国’,name:’小红’,score:88});<br>db.users.save({contry:’中国’,name:’小张’,score:99});<br>db.users.save({contry:’美国’,name:’jack’,score:45});<br>db.users.save({contry:’美国’,name:’rose’,score:67});<br>db.users.save({contry:’美国’,name:’mick’,score:89});</li></ul><h4 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">db.orders.insert([</span><br><span class="line">   &#123; <span class="string">"_id"</span> : <span class="number">1</span>, <span class="string">"item"</span> : <span class="string">"almonds"</span>, <span class="string">"price"</span> : <span class="number">12</span>, <span class="string">"quantity"</span> : <span class="number">2</span> &#125;,</span><br><span class="line">   &#123; <span class="string">"_id"</span> : <span class="number">2</span>, <span class="string">"item"</span> : <span class="string">"pecans"</span>, <span class="string">"price"</span> : <span class="number">20</span>, <span class="string">"quantity"</span> : <span class="number">1</span> &#125;,</span><br><span class="line">   &#123; <span class="string">"_id"</span> : <span class="number">3</span>  &#125;</span><br><span class="line">]);</span><br><span class="line">db.inventory.insert([</span><br><span class="line">   &#123; <span class="string">"_id"</span> : <span class="number">1</span>, <span class="string">"sku"</span> : <span class="string">"almonds"</span>, <span class="attr">description</span>: <span class="string">"product 1"</span>, <span class="string">"instock"</span> : <span class="number">120</span> &#125;,</span><br><span class="line">   &#123; <span class="string">"_id"</span> : <span class="number">2</span>, <span class="string">"sku"</span> : <span class="string">"bread"</span>, <span class="attr">description</span>: <span class="string">"product 2"</span>, <span class="string">"instock"</span> : <span class="number">80</span> &#125;,</span><br><span class="line">   &#123; <span class="string">"_id"</span> : <span class="number">3</span>, <span class="string">"sku"</span> : <span class="string">"cashews"</span>, <span class="attr">description</span>: <span class="string">"product 3"</span>, <span class="string">"instock"</span> : <span class="number">60</span> &#125;,</span><br><span class="line">   &#123; <span class="string">"_id"</span> : <span class="number">4</span>, <span class="string">"sku"</span> : <span class="string">"pecans"</span>, <span class="attr">description</span>: <span class="string">"product 4"</span>, <span class="string">"instock"</span> : <span class="number">70</span> &#125;,</span><br><span class="line">   &#123; <span class="string">"_id"</span> : <span class="number">5</span>, <span class="string">"sku"</span>: <span class="literal">null</span>, <span class="attr">description</span>: <span class="string">"Incomplete"</span> &#125;,</span><br><span class="line">   &#123; <span class="string">"_id"</span> : <span class="number">6</span> &#125;</span><br><span class="line">]);</span><br><span class="line">db.orders.aggregate([</span><br><span class="line">   &#123;</span><br><span class="line">     $lookup:</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="keyword">from</span>: <span class="string">"inventory"</span>,</span><br><span class="line">         localField: <span class="string">"item"</span>,</span><br><span class="line">         foreignField: <span class="string">"sku"</span>,</span><br><span class="line">         <span class="keyword">as</span>: <span class="string">"inventory_docs"</span></span><br><span class="line">       &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><h4 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h4><ul><li><a href="https://docs.mongodb.com/manual/reference/operator/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/operator/</a></li></ul><h4 id="配置https"><a href="#配置https" class="headerlink" title="配置https"></a>配置https</h4><ul><li>公钥  公开的加密方式</li><li>私钥  存在服务器的唯一解公钥加密的方式</li><li>签名  确保数据的一致性</li><li>证书  确保当前发送数据单位可信</li></ul><h3 id="使用mongoose"><a href="#使用mongoose" class="headerlink" title="使用mongoose"></a>使用mongoose</h3><p><code>npm i mongoose --save</code></p><p><code>stuModel.find({},{name:1,_id:0},{skip:3,limit:1},(err,docs)=&gt;{    if(!err){console.log(docs)}})</code>只查询name,跳过三个只显示1<br><code>stuModel.find({},&quot;name -_id&quot;,(err,docs)=&gt;{    if(!err){console.log(docs)}})</code>跟上一样</p><p><strong>连接mongo,进行简单操作</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line">mongoose.connect(<span class="string">"mongodb://127.0.0.1/test"</span>)</span><br><span class="line">mongoose.connection.once(<span class="string">"open"</span>, () =&gt; <span class="built_in">console</span>.log(<span class="string">"连接成功"</span>))</span><br><span class="line">mongoose.connection.once(<span class="string">"close"</span>, () =&gt; <span class="built_in">console</span>.log(<span class="string">"连接断开"</span>))</span><br><span class="line">    <span class="comment">//mongoose.disconnect()</span></span><br><span class="line"><span class="keyword">const</span> Schema = mongoose.Schema</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stuSchema = <span class="keyword">new</span> Schema(&#123;</span><br><span class="line">    name: <span class="built_in">String</span>,</span><br><span class="line">    age: <span class="built_in">Number</span>,</span><br><span class="line">    gender: &#123;</span><br><span class="line">        type: <span class="built_in">String</span>,</span><br><span class="line">        <span class="keyword">default</span>: <span class="string">'female'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    address: <span class="built_in">String</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> stuModel = mongoose.model(<span class="string">"student"</span>, stuSchema)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*stuModel.create(&#123;</span></span><br><span class="line"><span class="comment">    name: 'jiachen',</span></span><br><span class="line"><span class="comment">    age: 20,</span></span><br><span class="line"><span class="comment">    gender: 'man',</span></span><br><span class="line"><span class="comment">    address: 'yiyang'</span></span><br><span class="line"><span class="comment">&#125;, (err) =&gt; &#123;</span></span><br><span class="line"><span class="comment">    if (!err) &#123;</span></span><br><span class="line"><span class="comment">        console.log('插入成功')</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;)*/</span></span><br><span class="line">stuModel.findOne(&#123;&#125;,(err,doc)=&gt;&#123;</span><br><span class="line">    <span class="keyword">if</span>(!err)&#123;</span><br><span class="line">        doc.update(&#123;<span class="attr">$set</span>:&#123;<span class="attr">age</span>:<span class="number">28</span>&#125;&#125;,err=&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span>(!err)&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'modify success'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MongoDB&quot;&gt;&lt;a href=&quot;#MongoDB&quot; class=&quot;headerlink&quot; title=&quot;MongoDB&quot;&gt;&lt;/a&gt;MongoDB&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一个数据库对应多个集合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个集合对应多个文档对象&lt;/li&gt;
&lt;li&gt;在mongo中不论是db还是集合，你都无需去创建他&lt;/li&gt;
&lt;li&gt;直接就当他已经存在，直接Use来使用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;把文档比喻成数据库的一行，一个集合相当于一张表&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;use db名称;&lt;ul&gt;
&lt;li&gt;接着会被切换到该db中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db.要创建的集合名称.save({})&lt;/code&gt;;这样集合就被创建了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;解决32位异常&lt;/strong&gt;&lt;br&gt;mongod –dbpath=”路径” –journal –storageEngine=mmapv1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>初识断点调试</title>
    <link href="http://yoursite.com/2019/07/26/%E5%88%9D%E8%AF%86%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/"/>
    <id>http://yoursite.com/2019/07/26/初识断点调试/</id>
    <published>2019-07-26T09:35:20.948Z</published>
    <updated>2019-07-26T11:34:50.763Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初识断点调试"><a href="#初识断点调试" class="headerlink" title="初识断点调试"></a>初识断点调试</h1><blockquote><p>之前用console.log调试，比较麻烦，发现断电调试非常好用</p></blockquote><h3 id="使用VS-Code调试node"><a href="#使用VS-Code调试node" class="headerlink" title="使用VS Code调试node"></a>使用VS Code调试node</h3><ul><li>打开vscode</li></ul><a id="more"></a><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/cutdot1.png" alt="1564132432137"></p><p>点击调试虫子，然后添加配置，使用node</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/cutdot2.png" alt="1564132500339"></p><p>添加之后发现多了一个文件，进去修改配置</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/cutdot3.png" alt="1564132604123"></p><h3 id="开始调试"><a href="#开始调试" class="headerlink" title="开始调试"></a>开始调试</h3><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/cutdot4.png" alt="1564133154968"></p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/cutdot5.png" alt="1564132943710"></p><p>断点之后可以查看变量当中的数据,找出bug</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;初识断点调试&quot;&gt;&lt;a href=&quot;#初识断点调试&quot; class=&quot;headerlink&quot; title=&quot;初识断点调试&quot;&gt;&lt;/a&gt;初识断点调试&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;之前用console.log调试，比较麻烦，发现断电调试非常好用&lt;/p&gt;
&lt;/blockquote&gt;&lt;h3 id=&quot;使用VS-Code调试node&quot;&gt;&lt;a href=&quot;#使用VS-Code调试node&quot; class=&quot;headerlink&quot; title=&quot;使用VS Code调试node&quot;&gt;&lt;/a&gt;使用VS Code调试node&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;打开vscode&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="vscode" scheme="http://yoursite.com/categories/vscode/"/>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="调试" scheme="http://yoursite.com/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>使用node连接Mysql，简单的注册登陆demo</title>
    <link href="http://yoursite.com/2019/07/26/%E4%BD%BF%E7%94%A8node%E8%BF%9E%E6%8E%A5Mysql%EF%BC%8C%E7%AE%80%E5%8D%95%E7%9A%84%E6%B3%A8%E5%86%8C%E7%99%BB%E9%99%86demo/"/>
    <id>http://yoursite.com/2019/07/26/使用node连接Mysql，简单的注册登陆demo/</id>
    <published>2019-07-26T09:31:48.912Z</published>
    <updated>2019-07-26T11:37:35.377Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用node连接Mysql，简单的注册登陆demo"><a href="#使用node连接Mysql，简单的注册登陆demo" class="headerlink" title="使用node连接Mysql，简单的注册登陆demo"></a>使用node连接Mysql，简单的注册登陆demo</h1><blockquote><p>初步使用，学习node过程中小笔记</p></blockquote><h3 id="创建工作区"><a href="#创建工作区" class="headerlink" title="创建工作区"></a>创建工作区</h3><p>使用cnpm 国内淘宝的一个npm镜像，速度更快</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cnpm -g --registry=https://registry.npm.taobao .org</span><br></pre></td></tr></table></figure><p>管理员运行Cmd在工作区，初始化一些包</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm init</span><br></pre></td></tr></table></figure><p>在启动MySQL的过程中有点小问题，官网下载的压缩包，配置老是出错，可能是跟之前安装了一些集成环境的软件有冲突，遂放弃，直接用 <strong>PHPStudy</strong> 这个集成软件</p><h3 id="如何创建与数据库的连接"><a href="#如何创建与数据库的连接" class="headerlink" title="如何创建与数据库的连接"></a>如何创建与数据库的连接</h3><p>创建表，使用<strong>SQL</strong></p><p>设ID为主键，自动递增</p><p>然后插入一条数据测试一下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`user_table`</span></span><br><span class="line">(</span><br><span class="line"><span class="string">`ID`</span> <span class="built_in">int</span>(<span class="number">8</span>) <span class="keyword">UNSIGNED</span> AUTO_INCREMENT primary <span class="keyword">key</span>,</span><br><span class="line"><span class="string">`userName`</span>  <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`passWord`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user_table`</span> (<span class="string">`userName`</span>,<span class="string">`passWord`</span>) <span class="keyword">VALUES</span> (<span class="string">'jason'</span>,<span class="string">'afsdg'</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/node_mysql1.png" alt="1564126756258"></p><p>引入MySQL模块，使node与数据库建立连接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">'mysql'</span>)</span><br><span class="line"><span class="keyword">let</span> db = mysql.createConnection(&#123;</span><br><span class="line">    host: <span class="string">'localhost'</span>, <span class="comment">//地址</span></span><br><span class="line">    user: <span class="string">'root'</span>, <span class="comment">//用户名</span></span><br><span class="line">    password: <span class="string">'root'</span>, <span class="comment">//密码</span></span><br><span class="line">    port: <span class="string">'3306'</span>, <span class="comment">//端口号</span></span><br><span class="line">    database: <span class="string">'数据库名'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="简单的SQL查询"><a href="#简单的SQL查询" class="headerlink" title="简单的SQL查询"></a>简单的SQL查询</h3><p>在query() 方法里直接写SQL语句，返回结果回调</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.query(<span class="string">`UPDATE user_table  SET passWord='22134' where ID=0`</span>, (err, data) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'错了'</span>, err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="注册登陆demo"><a href="#注册登陆demo" class="headerlink" title="注册登陆demo"></a>注册登陆demo</h3><p>用 <code>createConnection</code> 创建 Mysql 连接，每执行一次 <code>connection.query</code> 都是一个全新的连接，会造成一个资源的极大浪费，降低性能。</p><figure class="highlight plain"><figcaption><span>`分发`、`复用`、`管理` 这些连接。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```javascript</span><br><span class="line">let db = mysql.createPool(&#123;</span><br><span class="line">    host: &apos;localhost&apos;,</span><br><span class="line">    user: &apos;root&apos;,</span><br><span class="line">    password: &apos;root&apos;,</span><br><span class="line">    port: &apos;3306&apos;,</span><br><span class="line">    database: &apos;XXX&apos;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>连接数据库后，与网页建立连接，数据判断很重要</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> server = http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//解析URL</span></span><br><span class="line">    <span class="keyword">let</span> &#123; pathname, query &#125; = url.parse(req.url, <span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">let</span> &#123; user, pass &#125; = query;</span><br><span class="line">    <span class="built_in">console</span>.log(url.parse(req.url, <span class="literal">true</span>))</span><br><span class="line">    <span class="keyword">switch</span> (pathname) &#123;</span><br><span class="line">        <span class="comment">//接口</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">'/reg'</span>:</span><br><span class="line">            <span class="comment">//校验</span></span><br><span class="line">            <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">                res.write(<span class="string">'&#123;"err": 1, "msg": "username can\'t be null"&#125;'</span>);</span><br><span class="line">                res.end();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!pass) &#123;</span><br><span class="line">                res.write(<span class="string">'&#123;"err": 1, "msg": "password can\'t be null"&#125;'</span>);</span><br><span class="line">                res.end();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="regexp">/^\w&#123;4,16&#125;$/</span>.test(user)) &#123;<span class="comment">//控制长度，字符，防止非法SQL注入</span></span><br><span class="line">                res.write(<span class="string">'&#123;"err": 1, "msg": "username is invaild"&#125;'</span>);</span><br><span class="line">                res.end();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="regexp">/['|"]/</span>.test(pass)) &#123;</span><br><span class="line">                res.write(<span class="string">'&#123;"err": 1, "msg": "password is invaild"&#125;'</span>);</span><br><span class="line">                res.end();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                db.query(<span class="string">`SELECT * FROM user_table WHERE userName='<span class="subst">$&#123;user&#125;</span>'`</span>, (err, data) =&gt; &#123;</span><br><span class="line">                    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                        res.write(<span class="string">'&#123;"err": 1, "msg": "database error"&#125;'</span>);</span><br><span class="line">                        res.end();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        res.write(<span class="string">'&#123;"err": 2, "msg": "this username exsits"&#125;'</span>);</span><br><span class="line">                        res.end();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        db.query(<span class="string">`INSERT INTO user_table (userName,passWord) VALUES('<span class="subst">$&#123;user&#125;</span>','<span class="subst">$&#123;pass&#125;</span>')`</span>, (err, data) =&gt; &#123;</span><br><span class="line">                            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                                res.write(<span class="string">'&#123;"err": 2, "msg": "database error"&#125;'</span>);</span><br><span class="line">                                res.end();</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                res.write(<span class="string">'&#123;"err": 0, "msg": "success"&#125;'</span>);</span><br><span class="line">                                res.end();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'/login'</span>:</span><br><span class="line">            <span class="comment">//校验</span></span><br><span class="line">            <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">                res.write(<span class="string">'&#123;"err": 1, "msg": "username can\'t be null"&#125;'</span>);</span><br><span class="line">                res.end();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!pass) &#123;</span><br><span class="line">                res.write(<span class="string">'&#123;"err": 1, "msg": "password can\'t be null"&#125;'</span>);</span><br><span class="line">                res.end();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="regexp">/^\w&#123;4,16&#125;$/</span>.test(user)) &#123;</span><br><span class="line">                res.write(<span class="string">'&#123;"err": 1, "msg": "username is invaild"&#125;'</span>);</span><br><span class="line">                res.end();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="regexp">/['|"]/</span>.test(pass)) &#123;</span><br><span class="line">                res.write(<span class="string">'&#123;"err": 1, "msg": "password is invaild"&#125;'</span>);</span><br><span class="line">                res.end();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                db.query(<span class="string">`SELECT * FROM user_table WHERE userName='<span class="subst">$&#123;user&#125;</span>'`</span>, (err, data) =&gt; &#123;</span><br><span class="line">                    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                        res.write(<span class="string">'&#123;"err": 1, "msg": "database error"&#125;'</span>);</span><br><span class="line">                        res.end();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.length == <span class="number">0</span>) &#123;</span><br><span class="line">                        res.write(<span class="string">'&#123;"err": 1, "msg": "no this user"&#125;'</span>);</span><br><span class="line">                        res.end();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data[<span class="number">0</span>].passWord != pass) &#123;</span><br><span class="line">                        res.write(<span class="string">'&#123;"err": 1, "msg": "username or password is incorrect"&#125;'</span>);</span><br><span class="line">                        res.end();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        res.write(<span class="string">'&#123;"err": 0, "msg": "success"&#125;'</span>);</span><br><span class="line">                        res.end();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="comment">//读取html文件</span></span><br><span class="line">            <span class="keyword">let</span> rs = fs.createReadStream(<span class="string">`www<span class="subst">$&#123;pathname&#125;</span>`</span>);</span><br><span class="line">            <span class="keyword">let</span> gz = zlib.createGzip();</span><br><span class="line">            res.setHeader(<span class="string">'content-encoding'</span>, <span class="string">'gzip'</span>);</span><br><span class="line">            <span class="comment">//使用管道先压缩</span></span><br><span class="line">            rs.pipe(gz).pipe(res);</span><br><span class="line">            rs.on(<span class="string">'error'</span>, err =&gt; &#123;</span><br><span class="line">                res.writeHeader(<span class="number">404</span>);</span><br><span class="line">                res.write(<span class="string">'Not Found'</span>);</span><br><span class="line">                res.end();</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">server.listen(<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>随便创一个，点击注册</p><p><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/node_mysql2.png" alt="1564132774040"><br>通过断点调试，查看到，query中的数据<br><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/node_mysql3.png" alt="1564132943710"><br>数据库中存在新增用户<br><img src="/images/loading.png" data-original="https://github.com/2249038142/picture/raw/master/node_mysql4.png" alt="1564132971403"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用node连接Mysql，简单的注册登陆demo&quot;&gt;&lt;a href=&quot;#使用node连接Mysql，简单的注册登陆demo&quot; class=&quot;headerlink&quot; title=&quot;使用node连接Mysql，简单的注册登陆demo&quot;&gt;&lt;/a&gt;使用node连接Mysql，简单的注册登陆demo&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;初步使用，学习node过程中小笔记&lt;/p&gt;
&lt;/blockquote&gt;&lt;h3 id=&quot;创建工作区&quot;&gt;&lt;a href=&quot;#创建工作区&quot; class=&quot;headerlink&quot; title=&quot;创建工作区&quot;&gt;&lt;/a&gt;创建工作区&lt;/h3&gt;&lt;p&gt;使用cnpm 国内淘宝的一个npm镜像，速度更快&lt;/p&gt;
    
    </summary>
    
    
      <category term="node.js" scheme="http://yoursite.com/categories/node-js/"/>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
      <category term="后台" scheme="http://yoursite.com/tags/%E5%90%8E%E5%8F%B0/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>毛概课后复习参考答案</title>
    <link href="http://yoursite.com/2019/07/03/%E6%AF%9B%E6%A6%82%E8%AF%BE%E5%90%8E%E5%A4%8D%E4%B9%A0%E9%A2%98%E5%8F%82%E8%80%83%EF%BC%9A/"/>
    <id>http://yoursite.com/2019/07/03/毛概课后复习题参考：/</id>
    <published>2019-07-03T06:10:07.324Z</published>
    <updated>2019-07-13T05:13:26.454Z</updated>
    
    <content type="html"><![CDATA[<p>课后复习题参考：</p><p><strong>第一章</strong></p><p>1、毛泽东思想的含义</p><p>毛泽东思想是马克思主义中国化的第一个重大理论成果，是马克思列宁主义在中国的运用和发展，是被实践证明了的关于中国革命和建设的正确的理论原则和经验总结，是中国共产党集体智慧的结晶，是党必须长期坚持的指导思想。</p><a id="more"></a><p>2、毛泽东思想形成发展的历史条件</p><p>19世纪末20世纪初，世界进入帝国主义和无产阶级革命时代，作为中国反帝反封建民主革命指导思想的毛泽东思想，正是在这样的时代条件下形成和发展起来的。</p><p>中国共产党领导人民进行革命和建设的成功实践是毛泽东思想形成和发展的实践基础。</p><p>3、毛泽东思想的主要内容和活的灵魂。</p><p>主要内容：新民主主义革命理论、社会主义革命和社会主义建设理论、革命军队建设和军事战略的理论、政策和策略的理论、思想政治工作和文化工作的理论、党的建设理论，这些是毛泽东思想科学体系的主要内容。</p><p>活的灵魂：实事求是、群众路线、独立自主是毛泽东思想的活的灵魂。</p><p>选择题：毛泽东思想在土地革命战争时期形成，在抗日战争时期走向成熟，并在解放战争时期和中华人民共和国成立后继续发展。</p><p><strong>第二章</strong></p><p>1、新民主主义革命总路线：1948年，他在《在晋绥干部会议上的讲话》中完整地表述了总路线的内容，即无产阶级领导的，人民大众的，反对帝国主义、封建主义和官僚资本主义的革命。新民主主义革命总路线反映了中国革命的基本规律，指明了中国革命的对象、动力、领导力量，是新民主主义革命的指导路线。</p><p>2、怎样理解中国革命必须由无产阶级及其政党来领导？</p><p>无产阶级及其政党的领导，是中国革命取得胜利的根本保证，无产阶级的领导权是中国革命的中心问题。</p><p>中国革命必须由无产阶级及其政党来领导，这是历史发展的必然：由于帝国主义不允许中国民族资产阶级建立独立的资产阶级共和国，而是要把中国变成它们的殖民地和半殖民地；由于中国民族资产阶级的软弱性和妥协性，它们不愿意也不能够彻底推翻帝国主义和封建势力；由于中国无产阶级的强大和革命的彻底性，领导中国革命的重任，历史地落到了中国无产阶级及其政党的肩上。</p><p>中国无产阶级及其政党能领导中国革命的可能性：中国无产阶级除了具有一般无产阶级的基本优点外，还具有自身的特点和优点。一是深受外国资本主义、本国封建势力和资产阶级的三重压迫，比任何别的阶级都来得坚决和彻底；二是它分布集中，有利于无产阶级队伍的组织和团结，有利于革命思想的传播和强大革命力量的形成；三是它的成员中的大部分出身于破产农民，便于和农民结成亲密的联盟。</p><p>无产阶级及其政党对中国革命的领导权不是自然而然得来的，而是在与资产阶级争夺领导权的斗争中实现的。</p><p>3、新民主主义的政治纲领是：推翻帝国主义和封建主义的统治，建立一个无产阶级领导的、以工农联盟为基础的、各革命阶级联合专政的新民主主义的共和国。新民主主义共和国既不同于欧美式的资产阶级专政的共和国，又和苏联式的无产阶级专政的社会主义共和国相区别。</p><p>4、新民主主义的经济纲领是：没收封建地主阶级的土地归农民所有，没收官僚资产阶级的垄断资本归新民主主义的国家所有，保护民族工商业。</p><p>5、中国革命必须走农村包围城市、武装夺取政权的道路的必然性？</p><p>这是由中国所处的时代特点和具体国情决定的。一方面，在半殖民地半封建的中国社会，内无民主制度而受封建主义的压迫，外无民族独立而受帝国主义的压迫，这决定了中国革命的主要斗争形式只能是武装斗争，以革命的武装消灭反革命的武装，相应的主要组织形式必然是军队。另一方面，近代中国是一个农业大国，农民占全国人口的绝大多数，是无产阶级可靠的同盟军和革命的主力军，这决定了在中国开展革命斗争，必须充分地发动农民，凝聚农民阶级的革命力量，即走农村道路。</p><p>6、中国革命之所以能走农村包围城市、武装夺取政权的道路的可能性。</p><p>第一，近代中国是多个帝国主义间接统治的经济落后的半殖民地国家，为党在农村开展革命提供了可能；第二，农民革命愿望强烈，且革命的群众基础好。第三，全国革命形势的继续向前发展，为在农村建设革命根据地提供了客观条件。第四，相当力量正式红军的存在，为农村革命根据地的创立、巩固和发展提供了坚强后盾。第五，党的领导的有力量及其政策的不错误，为农村革命根据地建设和发展提供了重要的主观条件。</p><p>6、农村革命道路的主要内容。</p><p>中国革命走农村包围城市、武装夺取政权的道路，根本在于处理好土地革命、武装斗争、农村革命根据地建设三者之间的关系。</p><p>三者有机统一：土地革命是民主革命的基本内容；武装斗争是中国革命的主要形式，是农村根据地建设和土地革命的强有力保证；农村革命根据地是中国革命的战略阵地，是进行武装斗争和开展土地革命的依托。</p><p>7、如何理解新民主主义革命的三大法宝及其相互关系？</p><p>统一战线、武装斗争、党的建设中国共产党在中国革命中战胜敌人的三个主要的法宝，是新民主主义革命胜利的基本经验。</p><p>三者之间的关系：统一战线和武装斗争是中国革命的两个基本特点，是战胜敌人的两个基本武器。统一战线是实行武装斗争的统一战线，武装斗争是统一战线的中心支柱，党的组织则是掌握统一战线和武装斗争这两个武器以实行对敌冲锋陷阵的英勇战士。</p><p><strong>第三章</strong></p><p>1、为什么说新民主主义社会是一个过渡性社会？</p><p>从中华人民共和国成立到社会主义改造基本完成，是我国从新民主主义到社会主义的过渡时期。这一时期，我国社会的性质是新民主主义社会。</p><p>从经济上看，五种经济成分并存，即社会主义性质的国营经济、半社会主义性质的合作社经济、农民和手工业者的个体经济、私人资本主义经济和国家资本主义经济。其中主要的经济成分是三种：社会主义经济、个体经济和资本主义经济。</p><p>从政治上看，与三种主要经济成分之对应，中国社会的阶级构成主要是工人阶级、农民阶级和其他小资产阶级、民族资产阶级等基本的阶级力量。</p><p>在新民主主义社会中，社会主义的因素不论在经济上还是在政治上都已经居于领导地位，但非社会主义因素仍有很大比重。</p><p>总之，新民主主义社会是属于社会主义体系的，是逐步过渡到社会主义社会的过渡性质的社会。</p><p>2、党在过渡时期的总路线</p><p>党在过渡时期的总路线的内容：从中华人民共和国成立，到社会主义改造基本完成，这是一个过渡时期。党在这个过渡时期的总路线和总任务，是要在一个相当长的时期内，逐步实现国家的社会主义工业化，并逐步实现国家对农业、对手工业和对资本主义工商业的社会主义改造，简单概括为“一化三改”。</p><p>过渡时期的总路线是一条社会主义建设和社会主义改造同时并举的路线，体现了社会主义工业化和社会主义改造的紧密结合，体现了解放生产力与发展生产力、变革生产关系与发展生产力的有机统一。</p><p>\3. 如何理解中国确立社会主义基本制度的重大意义？</p><p>社会主义基本制度的确立是中国历史上最深刻最伟大的社会变革，为当代中国一切发展进步奠定了制度基础，也为中国特色社会主义制度的创新和发展提供了重要前提。</p><p>社会主义基本制度的确立，极大地促进了我国社会生产力的发展也初步显示了社会主义的优越性，还为在中国这样一个社会生产力水平十分落后的东方大国进行社会主义建设积累了重要经验。</p><p>中国社会主义基本制度的确立，是世界社会主义发展史上又一个历史性的伟大胜利，也进一步改变了世界政治经济格局，增强了社会主义的力量，对维护世界和平产生了积极影响。</p><p>我国社会主义基本制度的确立，再次证明了马克思列宁主义的真理性，而且以其独创性的理论原则和经验总结丰富和发展了科学社会主义理论。</p><p><strong>第四章</strong></p><p>1、毛泽东关于社会主义社会基本矛盾的思想？</p><p>矛盾是普遍存在的，社会主义社会同样充满着矛盾，正是这些矛盾推动着社会主义社会不断地向前发展。</p><p>在社会主义社会中，基本的矛盾仍然是生产关系和生产力之间的矛盾，上层建筑和经济基础之间的矛盾。</p><p>但社会主义社会的基本矛盾不是对抗性的矛盾，而是非对抗性的矛盾。社会主义社会基本矛盾运动具有“又相适应又相矛盾”的特点，是在生产关系和生产力基本适应、上层建筑和经济基础基本适应条件下的矛盾，是在人民根本利益一致基础上的矛盾。</p><p>社会主义社会基本矛盾可以经过社会主义制度本身，不断地得到解决。</p><p>2、毛泽东关于区分两类不同性质矛盾和正确处理人民内部矛盾两类性质不同社会矛盾的理论？</p><p>社会主义社会存在两类不同性质矛盾，这就是敌我矛盾和人民内部矛盾。敌我矛盾是根本利益对立基础上的矛盾，因而是对抗性的矛盾。人民内部矛盾是在人民根本利益一致基础上的矛盾，因而是非对抗性的矛盾。必须严格区分和正确处理两类不同性质的矛盾。</p><p>敌我矛盾采用专政的方法解决。人民内部矛盾采用民主的方法，如对于政治思想领域的人民内部矛盾，实行“团结—批评—团结”的方针；对于科学文化领域里的矛盾，实行“百花齐放、百家争鸣”的方针；对于共产党和民主党派的矛盾，实行“长期共存、互相监督”的方针</p><p>正确处理人民内部矛盾的问题是社会主义国家政治生活的主题。</p><p>\2. 党对社会主义建设道路初步探索的重大意义？</p><p>党对社会主义建设道路初步探索在理论和实践上取得的一系列重要成果，对于巩固我国社会主义制度，开创和发展中国特色社会主义，促进世界社会主义的发展，具有重要意义。</p><p>第一，巩固和发展了我国的社会主义制度。第二，为开创中国特色社会主义提供了宝贵经验、理论准备、物质基础。第三，丰富了科学社会主义的理论和实践。</p><p><strong>第五章</strong></p><p>1、邓小平理论形成的社会历史条件。</p><p>邓小平理论贯穿解放思想、实事求是的思想路线，围绕“什么是社会主义、怎样建设社会主义”这个首要的基本的理论问题。邓小平理论形成的社会历史条件：第一、和平与发展成为时代主题是邓小平理论形成的时代背景。第二，社会主义建设的经验教训是邓小平理论形成的历史根据。第三，改革开放和现代化建设的实践是邓小平理论形成的现实依据。</p><p>2、邓小平理论的社会主义本质论？</p><p>1992年初，邓小平在南方谈话中对社会主义本质作了总结性理论概括：“社会主义的本质，是解放生产力，发展生产力，消灭剥削，消除两极分化，最终达到共同富裕。”</p><p>3、邓小平的社会主义初级阶段理论？</p><p>我国处在社会主义初级阶段，是邓小平和我们党对当代中国基本国情的科学判断。社会主义初级阶段的论断包括两层含义：第一，我国已经进入社会主义社会，必须坚持而不能离开社会主义。第二，我国的社会主义社会还处在不发达的阶段，必须正视而不能超越初级阶段。</p><ol start="4"><li>党的基本路线</li></ol><p>党的十三大报告提出了党在社会主义初级阶段的基本路线：领导和团结全国各族人民，以经济建设为中心，坚持四项基本原则，坚持改革开放，自力更生，艰苦创业，为把我国建设成为富强、民主、文明的社会主义现代化国家而奋斗。</p><p>党的基本路线在改革开放实践中不断充实和完善。党的十七大把“和谐”与“富强、民主、文明”一起写入了基本路线。党的十九大进一步修改为“为把我国建设成为富强民主文明和谐美丽的社会主义现代化强国而奋斗”，不仅将“美丽”纳入了基本路线，而且将“现代化国家”提升为“现代化强国”，扩展了党的基本路线的内涵，提升了社会主义初级阶段的奋斗目标。</p><p>5、邓小平的社会主义市场经济理论？</p><p>邓小平社会主义市场经济理论的要点有：一是计划经济和市场经济不是划分社会制度的标志，计划经济不等于社会主义，市场经济也不等于资本主义；二是计划和市场都是经济手段，对经济活动的调节各有优势和长处，社会主义实行市场经济要把两者结合起来；三是市场经济作为资源配置的一种方式本身不具有制度属性，可以和不同的社会制度结合，从而表现出不同的性质。坚持社会主义制度与市场经济的结合，是社会主义市场经济的特色所在。</p><p><strong>第六章</strong></p><p>1、“三个代表”重要思想的形成条件？</p><p>第一，“三个代表”重要思想是在对冷战结束后国际局势科学判断的基础上形成的。冷战结束后世界多极化和经济全球化的趋势在曲折中发展，和平与发展仍是时代的主题。我们党所处的国际国内环境已经发生并还在经历着前所未有的巨大变化，这是“三个代表”重要思想产生的最重要的时代背景。第二，“三个代表”重要思想是在科学判断党的历史方位和总结历史经验的基础上提出来的。党所处的地位和环境、党所肩负的历史任务、党的自身状况，都发生了新的重大变化。进一步提高党的领导水平和执政水平、提高拒腐防变和抵御风险的能力，是我们党必须解决好的两大历史性课题。“三个代表”重要思想的提出，正是立足于党的历史、总结党的历史经验得出的重要结论。第三，“三个代表”重要思想是在建设中国特色社会主义伟大实践基础上形成的。</p><p>2、“三个代表”重要思想的核心观点</p><p>围绕着“建设一个什么样的党、怎样建设党”这一重大现实问题，江泽民提出了“三个代表”重要思想。“中国共产党必须始终代表中国先进生产力的发展要求，代表中国先进文化的前进方向，代表中国最广大人民的根本利益。”这是对“三个代表”重要思想的集中概括。</p><p><strong>第七章</strong></p><ol><li>科学发展观的科学内涵？</li></ol><p>科学发展观，第一要义是发展，核心立场是以人为本，基本要求是全面协调可持续，根本方法是统筹兼顾。这是对科学发展观的集中概括。</p><p> 课后复习题参考：</p><p><strong>第八章</strong></p><p>1、中国特色社会主义进入新时代的重大意义？</p><p>答：中国特色社会主义进入新时代，在中华人民共和国发展史上、中华民族发展史上具有重大意义，在世界社会主义发展史上、人类社会发展史上也具有重大意义。</p><p>第一、从中华民族复兴的历史进程看，中国特色社会主义进入新时代，意味着近代以来久经磨难的中华民族迎来了从站起来、富起来到强起来的伟大飞跃，迎来了实现中华民族伟大复兴的光明前景。</p><p>第二、从科学社会主义发展进程看，中国特色社会主义进入新时代，意味着科学社会主义在21世纪的中国焕发出强大生机活力，在世界上高高举起了中国特色社会主义伟大旗帜。</p><p>第三，从人类文明进程看，中国特色社会主义进入新时代，意味着中国特色社会主义道路、理论、制度、文化不断发展，拓展了发展中国家走向现代化的途径，给世界上那些既希望加快发展又希望保持自身独立性的国家和民族提供了全新选择，为解决人类问题贡献了中国智慧和中国方案。</p><p>2.试论述新时代我国社会主要矛盾已发生了怎样的转化？并说明实现这一转化的主要依据是什么？</p><p>答：党的十九大明确指出，我国社会主要矛盾已经转化为人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾。主要依据有以下三个方面：</p><p>一是经过改革开放40年的发展，我国社会生产力水平总体上显著提高，很多方面进入世界前列。如我国国内生产总值自2010年开始稳居世界第二位……这说明，我国进入社会主义初级阶段以来的“落后的社会生产”已经发生了新的阶段性变化。</p><p>二是人民生活水平显著提高，对美好生活的向往更加强烈，不仅对物质文化生活提出了更高要求，而且在民主、法治、公平、正义、安全、环境等方面的要求日益增长。这说明，人民群众对于日益增长的“物质文化需要”层次更高、内容范围更广，出现了阶段性的新特征。</p><p>三是影响满足人们美好生活需要的因素很多，但主要是发展的不平衡不充分问题。发展不平衡，主要指各区域各领域各方面发展不平衡，制约了全国发展水平提升。发展不充分，主要指一些地区、一些领域、一些方面还存在发展不足的问题，发展的任务仍然很重。发展不平衡不充分问题表现在很多方面。</p><p>这些发展不平衡不充分问题相互掣肘，带来很多社会矛盾和问题，是当前和今后一个时期制约我国发展和满足人民日益增长的美好生活需要的主要根源。</p><p><strong>第九章</strong></p><p>1.新时代建设中国特色社会主义的总任务？</p><p>坚持和发展中国特色社会主义的总任务，是实现社会主义现代化和中华民族伟大复兴，在全面建成小康社会的基础上，分两步走在本世纪中叶建成富强民主文明和谐美丽的社会主义现代化强国。中国梦是中华民族伟大复兴的形象表达，中国梦的本质是国家富强、民族振兴、人民幸福。</p><p>2.新时代中国特色社会主义发展的战略安排？</p><p>从全面建成小康社会到基本实现现代化，再到全面建成社会主义现代化强国，是新时代中国特色社会主义发展的战略安排。全面建设社会主义现代化国家的进程分两个阶段：第一个阶段，从2020年到2035年，在全面建成小康社会的基础上，再奋斗15年，基本实现社会主义现代化。第二个阶段，从2035年到本世纪中叶；在基本实现现代化的基础上，再奋斗15年，把我国建成富强民主文明和谐美丽的社会主义现代化强国。</p><p><strong>第十章</strong></p><pre><code>1.新时代如何推进现代化经济体系建设？</code></pre><p>推动建设现代化经济体系，必须贯彻创新、协调、绿色、开放、共享的新发展理念，必须坚持供给侧结构性改革，，推动经济发展质量变革、效率变革、动力变革，实现高质量增长。</p><ol start="2"><li>如何正确理解坚持党的领导、人民当家作主和依法治国的有机统一？</li></ol><p>走中国特色社会主义道路，必须坚持党的领导、人民当家作主和依法治国的有机统一。</p><p>党的领导是人民当家作主和依法治国的根本保证，人民当家作主是社会主义民主政治的本质特征，依法治国是党领导人民治理国家的基本方式，三者统一于我国社会主义民主政治伟大实践。</p><ol start="3"><li>如何推动社会主义文化繁荣兴盛？</li></ol><p>推动社会主义文化繁荣兴盛，必须坚持走中国特色社会主义文化发展道路：第一，必须巩固马克思主义在意识形态领域的指导地位，牢牢把握意识形态工作领导权；第二，必须弘扬社会主义核心值体系和核心价值观。社会主义核心价值体系由马克思主义指导思想、中国特色社会主义共同理想、以爱国主义为核心的民族精神和以改革创新为核心的时代精神、社会主义荣辱观四个方面内容构成。社会主义核心价值观是富强、民主、文明、和谐，自由、民主、公正、法治，爱国、敬业、诚信、友善。第三，必须坚定文化自信，建设社会主义文化强国，大力发展文化事业和文化产业，提高国家文化软实力。</p><ol start="4"><li>如何在发展中加强和改善民生？</li></ol><p>民生是人民幸福之基、社会和谐之本，在发展中加强和改善民生，第一，必须提高和改善民生水平，包括优先发展教育事业，提高就业质量和人民收入水平，加强社会保障体系建设，坚决打赢脱贫攻坚战，实施健康中国战略；第二，必须加强和创新社会治理，包括创新社会治理体制，改进社会治理方式等；第三，坚持国家总统安全观，包括完善国家安全体系，健全公共安全等。</p><ol start="5"><li>如何建设美丽中国？</li></ol><p>建设美丽中国，首先必须坚持人与自然和谐共生，形成人与自然和谐发展的新格局，把节约资源放在首位，坚持保护优先，着力推进绿色发展，实现最严格的环境保护政策，加快生态文明体制改革。</p><p><strong>第十一章</strong></p><p>1.党在新形势下治国理政的总方略？</p><p>“四个全面”战略布局是我们党在新形势下治国理政的总方略。全面建成小康社会是战略目标，全面深化改革、全面依法治国、全面从严治党是战略举措。</p><p>2.全面深化改革的总目标？</p><p>全面深化改革的总目标是完善和发展中国特色社会主义制度，推进国家治理体系和治理能力现代化。</p><p>3.如何走中国特色社会主义法治道路？</p><p>坚持中国共产党的领导，党的领导是社会主义法治最根本的保证。坚持人民在全面依法治国中的主体地位。坚持法律面前人人平等。坚持依法治国和以德治国相结合。坚持从中国实际出发。</p><p>4.新时代党的建设总要求？</p><p>新时代党的建设总要求是：坚持和加强党的全面领导，坚持党要管党、全面从严治党，以加强党的长期执政能力建设、先进性和纯洁性建设为主线，以党的政治建设为统领，以坚定理想信念宗旨为根基，以调动全党积极性、主动性、创造性为着力点，全面推进党的政治建设、思想建设、组织建设、作风建设、纪律建设，把制度建设贯穿其中，深入推进反腐败斗争，不断提高党的建设质量，把党建设成为始终走在时代前列、人民衷心拥护、勇于自我革命、经得起各种风浪考验、朝气蓬勃的马克思主义执政党。</p><p><strong>第十二章</strong></p><p>1.习近平强军思想的主要内容？</p><p>习近平强军思想深刻回答了“新时代建设一支什么样的强大人民军队、怎样建设强大人民军队”的时代课题，其主要内容有：一是强国必须强军；二是建设世界一流军队。三是党对军队的绝对领导是人民军队建军之本。四是必须构建中国特色现代军事力量体系。五是必须加强军队作风建设和纪律建设。六是推进强军事业必须坚持政治建军、改革强军、科技兴军、依法治军，更加注重聚焦实战、更加注重创新驱动、更加注重体系建设、更加注重集约高效、更加注重军民融合，全面提高革命化现代化正规化水平。七是改革是强军的必由之路。九是现代化军队必须构建中国特色军事法治体系。十是军民融合发展是兴国之举、强军之策。</p><p><strong>第十三章</strong></p><p>1.如何认识当今世界发展趋势？</p><p>第一、世界多极化在曲折中发展；第二、 经济全球化深入发展；第三、 文化多样化持续推进；第四，社会信息化快速发展</p><p>2.如何理解构建人类命运共同体思想？</p><p>第一，政治上，要相互尊重、平等协商，坚决摒弃冷战思维和强权政治，走对话而不对抗、结伴而不结盟的国与国交往新路。第二，安全上，要坚持以对话解决争端、以协商化解分歧，统筹应对传统和非传统安全威胁，反对一切形式的恐怖主义。第三，经济上，要同舟共济，促进贸易和投资自由化便利化，推动经济全球化朝着更加开放、包容、普惠、平衡、共赢的方向发展。第四，文化上，要尊重世界文明多样性，以文明交流超越文明隔阂、文明互鉴超越文明冲突、文明共存超越文明优越。第五，生态上，要坚持环境友好，合作应对气候变化，保护好人类赖以生存的地球家园。</p><p><strong>第十四章</strong></p><ol><li>党的领导是中国特色社会主义最本质的特征</li></ol><p>第一，这是由科学社会主义的理论逻辑所决定的，坚持无产阶级政党的领导是无产阶级革命和社会主义建设取得胜利的根本保证。第二，这是由中国特色社会主义产生与发展的历史逻辑所决定的。历史和现实证明，没有中国共产党的领导，就没有中国特色社会主义的产生与发展。</p><p>第三，这是由中国特色社会主义迈向新征程的实践逻辑所决定的。实现中华民族伟大复兴，关键在党。</p><ol start="2"><li>党的领导是中国特色社会主义制度的最大优势</li></ol><p>中国共产党的领导是中国特色社会主义制度的最大优势。第一，党是中国特色社会主义制度的创建者。第二，党的领导是充分发挥中国特色社会主义制度优势的根本保障。第三，党的自身优势是中国特色社会主义制度优势的主要来源。</p><ol start="3"><li>新时代中国共产党的历史使命？</li></ol><p>新时代中国共产党的历史使命，就是统揽伟大斗争、伟大工程、伟大事业、伟大梦想，在全面建成小康社会的基础上全面建成社会主义现代化强国，实现中华民族伟大复兴。</p><ol start="4"><li>党是最高政治领导力量？</li></ol><p>第一，这是马克思主义政党的基本要求。第二，这是对党领导革命、建设和改革历史经验的深刻总结。第三，这是推进伟大事业的根本保证。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;课后复习题参考：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第一章&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1、毛泽东思想的含义&lt;/p&gt;&lt;p&gt;毛泽东思想是马克思主义中国化的第一个重大理论成果，是马克思列宁主义在中国的运用和发展，是被实践证明了的关于中国革命和建设的正确的理论原则和经验总结，是中国共产党集体智慧的结晶，是党必须长期坚持的指导思想。&lt;/p&gt;
    
    </summary>
    
    
      <category term="思政" scheme="http://yoursite.com/categories/%E6%80%9D%E6%94%BF/"/>
    
    
  </entry>
  
</feed>
